<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自定义校验注解</title>
      <link href="/2024/05/11/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/"/>
      <url>/2024/05/11/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>近期在用 <code>javax.validation</code> 做校验的时候发现没有对 <code>BigDecimal</code> 类型进行校验的注解，便自己动手写了一个。</p><h3 id="二、定义注解及校验类"><a href="#二、定义注解及校验类" class="headerlink" title="二、定义注解及校验类"></a>二、定义注解及校验类</h3><h4 id="2-1-注解类"><a href="#2-1-注解类" class="headerlink" title="2.1 注解类"></a>2.1 注解类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = BigDecimalRangeValidator.class)</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> BigDecimalRange &#123;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">min</span><span class="params">()</span> <span class="keyword">default</span> Double.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">max</span><span class="params">()</span> <span class="keyword">default</span> Double.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;Validation failed&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-校验类"><a href="#2-2-校验类" class="headerlink" title="2.2 校验类"></a>2.2 校验类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BigDecimalRangeValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;BigDecimalRange, BigDecimal&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal minValue;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal maxValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(BigDecimalRange constraintAnnotation)</span> &#123;</span><br><span class="line">        minValue = <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(constraintAnnotation.min());</span><br><span class="line">        maxValue = <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(constraintAnnotation.max());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(BigDecimal value, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value.compareTo(minValue) &gt;= <span class="number">0</span> &amp;&amp; value.compareTo(maxValue) &lt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、使用注解"><a href="#三、使用注解" class="headerlink" title="三、使用注解"></a>三、使用注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Example</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@BigDecimalRange(min = 0.1, max = 9.9, message = &quot;测试字段的范围为0.1~9.9&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal testValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot基于ldap协议实现用户认证</title>
      <link href="/2024/03/07/springboot%E5%9F%BA%E4%BA%8Eldap%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/"/>
      <url>/2024/03/07/springboot%E5%9F%BA%E4%BA%8Eldap%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="一、引入spring-boot-starter-data-ldap依赖"><a href="#一、引入spring-boot-starter-data-ldap依赖" class="headerlink" title="一、引入spring-boot-starter-data-ldap依赖"></a>一、引入<code>spring-boot-starter-data-ldap</code>依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-ldap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">ldap:</span></span><br><span class="line">    <span class="attr">urls:</span> <span class="string">ldap://xx.xx.xx.xx:389</span></span><br><span class="line">    <span class="attr">base:</span> <span class="string">OU=xxx,DC=xxx,DC=com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">xxx@xx.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>在配置文件里填入地址、baseDN、用户名和密码信息</p><h3 id="三、创建用户对象类"><a href="#三、创建用户对象类" class="headerlink" title="三、创建用户对象类"></a>三、创建用户对象类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.annotation.JSONField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.odm.annotations.Attribute;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.odm.annotations.Entry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.odm.annotations.Id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.Name;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ldap协议person类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entry(objectClasses = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 唯一标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="keyword">private</span> Name distinguishedName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录账号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Attribute(name = &quot;sAMAccountName&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String loginName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户姓名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Attribute(name = &quot;cn&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Attribute(name = &quot;userAccountControl&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer userAccountControl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDelete;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、用户登录"><a href="#四、用户登录" class="headerlink" title="四、用户登录"></a>四、用户登录</h3><h4 id="4-1-示例代码"><a href="#4-1-示例代码" class="headerlink" title="4.1 示例代码"></a>4.1 示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.ldap.core.LdapTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.filter.EqualsFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> LdapTemplate ldapTemplate;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LDAP_USERNAME_ATTR</span> <span class="operator">=</span> <span class="string">&quot;sAMAccountName&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String userName, String password)</span> &#123;</span><br><span class="line">    <span class="type">EqualsFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EqualsFilter</span>(LDAP_USERNAME_ATTR, userName);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> ldapTemplate.authenticate(<span class="string">&quot;&quot;</span>, filter.toString(), password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本逻辑就是调用ldapTemplate的authenticate方法来进行认证。</p><h4 id="4-2-完整代码"><a href="#4-2-完整代码" class="headerlink" title="4.2 完整代码"></a>4.2 完整代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cowave.meter.admin.user.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.IdUtil;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.access.Access;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.filter.security.AccessToken;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.filter.security.TokenService;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.support.mybatis.page.PageDO;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.util.Asserts;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.util.AssertsException;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.dao.SysDeptDao;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.dao.SysRoleDao;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.dao.SysUserDao;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.Person;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.SysDept;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.SysRole;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.service.LdapService;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.core.LdapTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.filter.EqualsFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.query.LdapQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ObjectUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LdapServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">LdapService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LdapTemplate ldapTemplate;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TokenService tokenService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysUserDao sysUserDao;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysUserService userService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDeptDao sysDeptDao;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysRoleDao sysRoleDao;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">BCryptPasswordEncoder</span> <span class="variable">bcryptPasswordEncoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LDAP_USERNAME_ATTR</span> <span class="operator">=</span> <span class="string">&quot;sAMAccountName&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 域账号登录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AccessToken <span class="title function_">domainLogin</span><span class="params">(String userName, String password)</span> &#123;</span><br><span class="line">        <span class="type">EqualsFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EqualsFilter</span>(LDAP_USERNAME_ATTR, userName);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">authenticate</span> <span class="operator">=</span> ldapTemplate.authenticate(<span class="string">&quot;&quot;</span>, filter.toString(), password);</span><br><span class="line">        <span class="keyword">if</span> (!authenticate) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertsException</span>(<span class="string">&quot;auth.failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">domainUserAccountExist</span> <span class="operator">=</span> sysUserDao.domainUserAccountExist(userName);</span><br><span class="line">        <span class="keyword">if</span> (Boolean.FALSE.equals(domainUserAccountExist)) &#123;</span><br><span class="line">            <span class="type">LdapQueryBuilder</span> <span class="variable">ldapQuery</span> <span class="operator">=</span> LdapQueryBuilder.query();</span><br><span class="line">            ldapQuery.filter(filter);</span><br><span class="line">            <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> ldapTemplate.findOne(ldapQuery, Person.class);</span><br><span class="line">            <span class="keyword">if</span> (ObjectUtils.isEmpty(person)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertsException</span>(<span class="string">&quot;user.notexist&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysUser</span>();</span><br><span class="line">            sysUser.setUserAccount(userName);</span><br><span class="line">            Asserts.isFalse(userService.userAccountExist(sysUser), <span class="string">&quot;账户名已存在&quot;</span>);</span><br><span class="line">            sysUser.setUserName(person.getName());</span><br><span class="line">            sysUser.setUserPasswd(bcryptPasswordEncoder.encode(password));</span><br><span class="line">            sysUser.setDomainUserAccount(userName);</span><br><span class="line">            <span class="comment">// 设置部门</span></span><br><span class="line">            <span class="type">SysDept</span> <span class="variable">sysDept</span> <span class="operator">=</span> sysDeptDao.queryRootDept();</span><br><span class="line">            <span class="keyword">if</span> (!ObjectUtils.isEmpty(sysDept)) &#123;</span><br><span class="line">                sysUser.setDeptId(sysDept.getDeptId());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 设置角色</span></span><br><span class="line">            PageDO&lt;SysRole&gt; sysRolePageDO = sysRoleDao.queryPage(<span class="literal">null</span>, <span class="string">&quot;2&quot;</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (sysRolePageDO.getPages() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">SysRole</span> <span class="variable">sysRole</span> <span class="operator">=</span> sysRolePageDO.getList().get(<span class="number">0</span>);</span><br><span class="line">                sysUser.setRoleId(sysRole.getRoleId());</span><br><span class="line">            &#125;</span><br><span class="line">            userService.saveOrUpdate(sysUser);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> sysUserDao.getByDomainUserAccount(userName);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> sysUser.getUserId();</span><br><span class="line">        <span class="type">AccessToken</span> <span class="variable">accessToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AccessToken</span>();</span><br><span class="line">        accessToken.setType(AccessToken.TYPE_USER);</span><br><span class="line"></span><br><span class="line">        accessToken.setUserCode(userId);</span><br><span class="line">        accessToken.setUsername(sysUser.getUserAccount());</span><br><span class="line">        accessToken.setUserNick(sysUser.getUserName());</span><br><span class="line">        accessToken.setDeptCode(sysUser.getDeptId());</span><br><span class="line">        accessToken.setRoles(List.of(sysUser.getRoleId()));</span><br><span class="line"></span><br><span class="line">        accessToken.setLoginIp(Access.ip());</span><br><span class="line">        accessToken.setLoginTime(Access.time());</span><br><span class="line">        accessToken.setAccessIp(Access.ip());</span><br><span class="line">        accessToken.setAccessTime(Access.time());</span><br><span class="line">        accessToken.setId(IdUtil.fastSimpleUUID());</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> tokenService.newToken(accessToken);</span><br><span class="line">        accessToken.setToken(token);</span><br><span class="line">        <span class="keyword">return</span> accessToken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-判断用户是否禁用"><a href="#4-3-判断用户是否禁用" class="headerlink" title="4.3 判断用户是否禁用"></a>4.3 判断用户是否禁用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据AD域的userAccountControl属性判断用户是否禁用</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> userAccContr</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> Boolean <span class="title function_">getUserDelete</span><span class="params">(<span class="type">int</span> userAccContr)</span> &#123;</span><br><span class="line">    <span class="comment">//TRUSTED_TO_AUTH_FOR_DELEGATION - 允许该帐户进行委派</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">16777216</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">16777216</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//PASSWORD_EXPIRED - (Windows 2000/Windows Server 2003) 用户的密码已过期</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">8388608</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">8388608</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//DONT_REQ_PREAUTH</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">4194304</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">4194304</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//USE_DES_KEY_ONLY - (Windows 2000/Windows Server 2003) 将此用户限制为仅使用数据加密标准 (DES) 加密类型的密钥</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2097152</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">2097152</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//NOT_DELEGATED - 设置此标志后，即使将服务帐户设置为信任其进行 Kerberos 委派，也不会将用户的安全上下文委派给该服务</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">1048576</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">1048576</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//TRUSTED_FOR_DELEGATION - 设置此标志后，将信任运行服务的服务帐户（用户或计算机帐户）进行 Kerberos 委派。</span></span><br><span class="line">    <span class="comment">// 任何此类服务都可模拟请求该服务的客户端。若要允许服务进行 Kerberos 委派，必须在服务帐户的 userAccountControl 属性上设置此标志</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">524288</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">524288</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SMARTCARD_REQUIRED - 设置此标志后，将强制用户使用智能卡登录</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">262144</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">262144</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MNS_LOGON_ACCOUNT - 这是 MNS 登录帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">131072</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">131072</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//DONT_EXPIRE_PASSWORD-密码永不过期</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">65536</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">65536</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MNS_LOGON_ACCOUNT - 这是 MNS 登录帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2097152</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">2097152</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SERVER_TRUST_ACCOUNT - 这是属于该域的域控制器的计算机帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">8192</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">8192</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//WORKSTATION_TRUST_ACCOUNT - 这是运行 Microsoft Windows NT 4.0 Workstation、Microsoft Windows NT 4.0 Server、</span></span><br><span class="line">    <span class="comment">// Microsoft Windows 2000 Professional 或 Windows 2000 Server 并且属于该域的计算机的计算机帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">4096</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">4096</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//INTERDOMAIN_TRUST_ACCOUNT - 对于信任其他域的系统域，此属性允许信任该系统域的帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2048</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">2048</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//NORMAL_ACCOUNT - 这是表示典型用户的默认帐户类型</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">512</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">512</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//TEMP_DUPLICATE_ACCOUNT - 此帐户属于其主帐户位于另一个域中的用户。此帐户为用户提供访问该域的权限，</span></span><br><span class="line">    <span class="comment">// 但不提供访问信任该域的任何域的权限。有时将这种帐户称为“本地用户帐户”</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">256</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">256</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//ENCRYPTED_TEXT_PASSWORD_ALLOWED - 用户可以发送加密的密码</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">128</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//PASSWD_CANT_CHANGE - 用户不能更改密码。可以读取此标志，但不能直接设置它</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">64</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">64</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//PASSWD_NOTREQD - 不需要密码</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">32</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">32</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//LOCKOUT</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">16</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//HOMEDIR_REQUIRED - 需要主文件夹</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">8</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ldap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ldap </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jira配置Ldap服务器进行用户认证</title>
      <link href="/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/"/>
      <url>/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Jira需要通过公司的域账号来登录，配置过程中踩了点坑，记录一下。</p></blockquote><h3 id="一、配置步骤"><a href="#一、配置步骤" class="headerlink" title="一、配置步骤"></a>一、配置步骤</h3><h4 id="1-1-添加LDAP认证"><a href="#1-1-添加LDAP认证" class="headerlink" title="1.1 添加LDAP认证"></a>1.1 添加LDAP认证</h4><p>用管理员账户登录Jira页面，在配置页面，找到“用户管理” -&gt; 点击“用户目录” -&gt; 点击“添加目录” -&gt; 选择“内部LDAP认证”<br><img src="/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/add.png" alt="本地图片"></p><h4 id="1-2-配置服务器"><a href="#1-2-配置服务器" class="headerlink" title="1.2 配置服务器"></a>1.2 配置服务器</h4><p>目录类型选择“OpenLDAP”，填写主机名、端口、用户名及密码，提前创建组，并在“默认组成员”输入框内填写该组名，防止域账户没有权限登录Jira系统<br><img src="/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/server.png" alt="本地图片"></p><h4 id="1-3-设置基本DN和用户名属性"><a href="#1-3-设置基本DN和用户名属性" class="headerlink" title="1.3 设置基本DN和用户名属性"></a>1.3 设置基本DN和用户名属性</h4><p>这里要看ldap服务器的具体值，我这个版本用户名属性的默认值是cn，但ldap服务器的是sAMAccountName<br><img src="/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/ldap.png" alt="本地图片"></p><h4 id="1-4-设置用户模式属性"><a href="#1-4-设置用户模式属性" class="headerlink" title="1.4 设置用户模式属性"></a>1.4 设置用户模式属性</h4><p><img src="/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/user.png" alt="本地图片"><br>虽然这些属性有默认值，但还是要看ldap服务器的具体值，我的ldap服务器的用户对象类是person，用户唯一的ID属性是distinguishedName</p><h4 id="1-5-设置组模式"><a href="#1-5-设置组模式" class="headerlink" title="1.5 设置组模式"></a>1.5 设置组模式</h4><p><img src="/2024/03/07/Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/group.png" alt="本地图片"><br>这里我改了组对象类。</p><h3 id="二、推荐工具"><a href="#二、推荐工具" class="headerlink" title="二、推荐工具"></a>二、推荐工具</h3><p>我用的是Ldap Browser，还不错。<br>下载地址： <a href="https://ldapbrowserwindows.com/">https://ldapbrowserwindows.com/</a></p><blockquote><p>在Jira配置Ldap过程中遇到的最大问题就是属性对不上，通过这个工具就能很方便的去查看了。<br>另外，添加目录时可以选择“LDAP”，这个模式下报错提示更清晰一些，我在配置过程中也是通过这个模式来发现属性配置错误的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ldap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ldap </tag>
            
            <tag> jira </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postman常用技巧</title>
      <link href="/2024/02/29/Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2024/02/29/Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="一、全局Token设置"><a href="#一、全局Token设置" class="headerlink" title="一、全局Token设置"></a>一、全局Token设置</h3><h4 id="1-登录时获取token"><a href="#1-登录时获取token" class="headerlink" title="1.登录时获取token"></a>1.登录时获取token</h4><p><img src="/2024/02/29/Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/get_token.png" alt="本地图片"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取登录接口的返回数据</span></span><br><span class="line"><span class="keyword">var</span> jsondata=pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line"><span class="comment">// 判断登录是否成功</span></span><br><span class="line"><span class="keyword">if</span> (jsondata.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="comment">// 获取token并设置到环境变量token的值</span></span><br><span class="line">    <span class="keyword">var</span> token=jsondata.<span class="property">data</span>.<span class="property">token</span></span><br><span class="line">    pm.<span class="property">globals</span>.<span class="title function_">set</span>(<span class="string">&quot;token&quot;</span>,token)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(jsondata.<span class="property">msg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-Collection设置token"><a href="#2-Collection设置token" class="headerlink" title="2.Collection设置token"></a>2.Collection设置token</h4><p><img src="/2024/02/29/Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/set_token.png" alt="本地图片"></p><h3 id="二、接口自动执行"><a href="#二、接口自动执行" class="headerlink" title="二、接口自动执行"></a>二、接口自动执行</h3><p><img src="/2024/02/29/Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/run_collection.png" alt="本地图片"></p><p>右击Collection，选择 “Run Collection”；</p><p>选中要执行的接口，在右侧填入执行次数和间隔时间，然后点击 “Run 测试自动执行”即可。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> postman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot logback日志显示时间差8小时</title>
      <link href="/2024/02/23/spring-boot-logback%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4%E5%B7%AE8%E5%B0%8F%E6%97%B6/"/>
      <url>/2024/02/23/spring-boot-logback%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4%E5%B7%AE8%E5%B0%8F%E6%97%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>logback日志的时间和系统时间对不上，总是差几个小时，设置了项目时区没有用，项目里 new Date() 的时间没问题。</p><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>同一个项目部署在两台机器上，之前那台时间是正常的，这台时间不正常，暂时没找到具体原因。</p><h3 id="三、解决方法"><a href="#三、解决方法" class="headerlink" title="三、解决方法"></a>三、解决方法</h3><p>改一下logback的配置文件 pattern 的时间格式</p><ul><li>修改前<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss:SSS&#125; %thread [%level] %m%n&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>修改后<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss:SSS,CTT&#125; %thread [%level] %m%n&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>在yyyy-MM-dd HH:mm:ss.SSS后面加一个指定的时区,用逗号分隔开。如yyyy-MM-dd HH:mm:ss.SSS,CTT。CTT为上海时间。改完后确实可以了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> logback </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websocket 自动断开报错, java.io.EOFException 解决办法</title>
      <link href="/2024/02/23/websocket%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF-java-io-EOFException-null/"/>
      <url>/2024/02/23/websocket%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF-java-io-EOFException-null/</url>
      
        <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>websocket 服务使用 Nginx 反向代理后，发现会自动断开，查看日志如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">2024-02-22 18:51:05:964 1901020240223104709130 [ERROR] websocket连接错误,</span><br><span class="line">java.io.EOFException: null</span><br><span class="line">        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.fillReadBuffer(NioEndpoint.java:1339)</span><br><span class="line">        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(NioEndpoint.java:1226)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:75)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsFrameServer.doOnDataAvailable(WsFrameServer.java:183)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsFrameServer.notifyDataAvailable(WsFrameServer.java:162)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.upgradeDispatch(WsHttpUpgradeHandler.java:157)</span><br><span class="line">        at org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.dispatch(UpgradeProcessorInternal.java:60)</span><br><span class="line">        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:59)</span><br><span class="line">        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)</span><br><span class="line">        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)</span><br><span class="line">        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)</span><br><span class="line">        at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)</span><br><span class="line">        at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)</span><br><span class="line">        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">        at java.base/java.lang.Thread.run(Thread.java:842)</span><br></pre></td></tr></table></figure><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>使用了 Nginx 反向代理后，超过60秒没有数据传输的连接会自动断开。</p><h3 id="三、解决方法"><a href="#三、解决方法" class="headerlink" title="三、解决方法"></a>三、解决方法</h3><h4 id="1-修改-nginx-配置"><a href="#1-修改-nginx-配置" class="headerlink" title="1. 修改 nginx 配置"></a>1. 修改 nginx 配置</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_read_timeout 3600;</span><br></pre></td></tr></table></figure><p>将超时时间改长一点</p><h3 id="2-前端或者后端加个定时任务发个心跳包就好了，例如："><a href="#2-前端或者后端加个定时任务发个心跳包就好了，例如：" class="headerlink" title="2. 前端或者后端加个定时任务发个心跳包就好了，例如："></a>2. 前端或者后端加个定时任务发个心跳包就好了，例如：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定时任务，由于使用nginx反向代理，60秒无数据传输会断开</span></span><br><span class="line">timer=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (websocket.<span class="property">readyState</span> == <span class="number">1</span>) &#123;</span><br><span class="line">websocket.<span class="title function_">send</span>(<span class="string">&quot;心跳包检测&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//IM连接已断开</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="number">50</span> * <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><blockquote><p>我两种方法都用了，<br>首先将超时时间改成了一小时。<br>然后让前端没半小时给后台发送一次心跳，后台响应心跳。<br><img src="/2024/02/23/websocket%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF-java-io-EOFException-null/websocket.png" alt="本地图片"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> websocket </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BigDecimal比较大小</title>
      <link href="/2024/02/22/BigDecimal%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F/"/>
      <url>/2024/02/22/BigDecimal%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个类是Java里精确计算的类，下面说一下BidDecimal大小、相等的判断</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">1.0</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> BigDecimal.valueOf(<span class="number">1.000</span>);</span><br></pre></td></tr></table></figure><h3 id="一、比较方法"><a href="#一、比较方法" class="headerlink" title="一、比较方法"></a>一、比较方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> a.compareTo(b);</span><br></pre></td></tr></table></figure><h3 id="二、比较结果"><a href="#二、比较结果" class="headerlink" title="二、比较结果"></a>二、比较结果</h3><ul><li>-1 小于</li><li>0  等于</li><li>1  大于</li></ul><blockquote><p>判断时以大于0、小于0、等于0为条件。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java通过SSH连接路由器，输入命令并读取响应</title>
      <link href="/2024/02/20/Java%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%93%8D%E5%BA%94/"/>
      <url>/2024/02/20/Java%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近需要读取和修改华为路由器的配置，使用Java语言开发，通过SSH连接，输入命令并读取响应。</p></blockquote><h3 id="1-添加mwiede-jsch依赖"><a href="#1-添加mwiede-jsch依赖" class="headerlink" title="1.添加mwiede/jsch依赖"></a>1.添加<code>mwiede/jsch</code>依赖</h3><ul><li>如果使用Maven，可以在pom.xml文件中添加以下依赖:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.mwiede<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>如果使用Gradle，则添加到build.gradle文件:<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.github.mwiede:jsch:0.2.15&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-使用Jsch创建SSH连接，输入命令并返回响应"><a href="#2-使用Jsch创建SSH连接，输入命令并返回响应" class="headerlink" title="2.使用Jsch创建SSH连接，输入命令并返回响应"></a>2.使用<code>Jsch</code>创建SSH连接，输入命令并返回响应</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">*  获取SSH命令响应</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> userName        用户名</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> password        密码</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> host              ip地址</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> port              端口</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> commandList  命令列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getShellCmdRes</span><span class="params">(String userName, String password, String host, Integer port, List&lt;String&gt; commandList)</span> <span class="keyword">throws</span> JSchException, IOException &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">JSch</span> <span class="variable">jsch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSch</span>();</span><br><span class="line">        <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> jsch.getSession(userName, host, port());</span><br><span class="line">        session.setPassword(password);</span><br><span class="line">        session.setConfig(<span class="string">&quot;StrictHostKeyChecking&quot;</span>, <span class="string">&quot;no&quot;</span>);</span><br><span class="line">        session.connect();</span><br><span class="line"></span><br><span class="line">        <span class="type">ChannelShell</span> <span class="variable">channel</span> <span class="operator">=</span> (ChannelShell) session.openChannel(<span class="string">&quot;shell&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取输入输出流</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">inputStreamForTheChannel</span> <span class="operator">=</span> channel.getOutputStream();</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">outputStreamForTheChannel</span> <span class="operator">=</span> channel.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接通道</span></span><br><span class="line">        channel.connect();</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintStream</span> <span class="variable">commander</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintStream</span>(inputStreamForTheChannel, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] tmp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (outputStreamForTheChannel.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> outputStreamForTheChannel.read(tmp, <span class="number">0</span>, <span class="number">1024</span>);</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(tmp, <span class="number">0</span>, i);</span><br><span class="line">                <span class="comment">// 读取响应</span></span><br><span class="line">                stringBuilder.append(output);</span><br><span class="line">                stringBuilder.append(System.lineSeparator());</span><br><span class="line">                <span class="comment">// 发送命令</span></span><br><span class="line">                commandList.forEach(command -&gt; &#123;</span><br><span class="line">                    commander.println(command);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (channel.isClosed()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (outputStreamForTheChannel.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">10</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ee) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭通道和会话</span></span><br><span class="line">        channel.disconnect();</span><br><span class="line">        session.disconnect();</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-调用上文方法"><a href="#3-调用上文方法" class="headerlink" title="3.调用上文方法"></a>3.调用上文方法</h3><h4 id="3-1-单条命令"><a href="#3-1-单条命令" class="headerlink" title="3.1 单条命令"></a>3.1 单条命令</h4><p>记得结束时加入退出语句，这里以路由器为例，用quit退出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; commandList = <span class="keyword">new</span>  <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">// 查看</span></span><br><span class="line">commandList.add(<span class="string">&quot;display bfd session all&quot;</span>);</span><br><span class="line"><span class="comment">// 退出会话</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 获取响应</span></span><br><span class="line"><span class="type">String</span> <span class="variable">response</span> <span class="operator">=</span> getShellCmdRes(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;1.1.1.1&quot;</span>, <span class="number">22</span>, List&lt;String&gt; commandList)</span><br></pre></td></tr></table></figure><p><img src="/2024/02/20/Java%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%93%8D%E5%BA%94/single.jpg" alt="本地图片"></p><h4 id="3-2-多条命令"><a href="#3-2-多条命令" class="headerlink" title="3.2 多条命令"></a>3.2 多条命令</h4><p>如果是多条命令，每进入一个会话，就多一个退出语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; commandList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">// 进入system-view</span></span><br><span class="line">commandList.add(<span class="string">&quot;system-view&quot;</span>);</span><br><span class="line"><span class="comment">// 进入Tunnel 0/0/5</span></span><br><span class="line">commandList.add(<span class="string">&quot;interface Tunnel 0/0/5&quot;</span>);</span><br><span class="line"><span class="comment">// 查看信息</span></span><br><span class="line">commandList.add(<span class="string">&quot;display this&quot;</span>);</span><br><span class="line"><span class="comment">// 退出Tunnel 0/0/5</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 退出system-view</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 退出会话</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 获取响应</span></span><br><span class="line"><span class="type">String</span> <span class="variable">response</span> <span class="operator">=</span> getShellCmdRes(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;1.1.1.1&quot;</span>, <span class="number">22</span>, List&lt;String&gt; commandList)</span><br></pre></td></tr></table></figure><p><img src="/2024/02/20/Java%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%93%8D%E5%BA%94/mutile.jpg" alt="本地图片"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将nginx设置为开机自启动的配置</title>
      <link href="/2024/02/20/%E5%B0%86nginx%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/02/20/%E5%B0%86nginx%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="一、背景描述"><a href="#一、背景描述" class="headerlink" title="一、背景描述"></a>一、背景描述</h3><p>虚拟机上安装了nginx，希望能够开机自启动。</p><h3 id="二、操作步骤"><a href="#二、操作步骤" class="headerlink" title="二、操作步骤"></a>二、操作步骤</h3><h4 id="1-进入-lib-systemd-system-目录下"><a href="#1-进入-lib-systemd-system-目录下" class="headerlink" title="1.进入 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 目录下"></a>1.进入 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 目录下</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /lib/systemd/system/</span><br></pre></td></tr></table></figure><h4 id="2-创建文件：nginx-service"><a href="#2-创建文件：nginx-service" class="headerlink" title="2.创建文件：nginx.service"></a>2.创建文件：nginx.service</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch nginx.service</span><br><span class="line">vim nginx.service</span><br></pre></td></tr></table></figure><h4 id="3-编辑文件内容"><a href="#3-编辑文件内容" class="headerlink" title="3.编辑文件内容"></a>3.编辑文件内容</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx service</span><br><span class="line">After=network.target </span><br><span class="line">   </span><br><span class="line">[Service] </span><br><span class="line">Type=forking </span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=true </span><br><span class="line">   </span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="4-开机自启动"><a href="#4-开机自启动" class="headerlink" title="4.开机自启动"></a>4.开机自启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Nginx的failed 13 Permission denied while connecting to upstream</title>
      <link href="/2024/02/20/%E8%A7%A3%E5%86%B3Nginx%E7%9A%8413-Permission-denied%E9%97%AE%E9%A2%98/"/>
      <url>/2024/02/20/%E8%A7%A3%E5%86%B3Nginx%E7%9A%8413-Permission-denied%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>最近在用nginx做反向代理的时候遇到这样一个问题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024/02/19 17:15:32 [crit] 3025#3025: *2 connect() to 127.0.0.1:19010 failed (13: Permission denied) while connecting to upstream, client: 10.64.68.30, server: , request: &quot;POST /opticTransceiver/addDeviceList HTTP/1.1&quot;, upstream: &quot;http://127.0.0.1:19010/opticTransceiver/addDeviceList&quot;, host: &quot;localhost:8080&quot;, referrer: &quot;http://localhost:8080/device-connect&quot;</span><br></pre></td></tr></table></figure><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>是因为SeLinux的限制。</p><h3 id="三、解决"><a href="#三、解决" class="headerlink" title="三、解决"></a>三、解决</h3><h4 id="1-关闭SeLinux的限制"><a href="#1-关闭SeLinux的限制" class="headerlink" title="1.关闭SeLinux的限制"></a>1.关闭SeLinux的限制</h4><h5 id="1-临时关闭-不用重启机器"><a href="#1-临时关闭-不用重启机器" class="headerlink" title="1) 临时关闭(不用重启机器)"></a>1) 临时关闭(不用重启机器)</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0 ##设置SELinux 成为permissive模式</span><br></pre></td></tr></table></figure><h5 id="2-修改配置文件-需要重启机器"><a href="#2-修改配置文件-需要重启机器" class="headerlink" title="2) 修改配置文件(需要重启机器)"></a>2) 修改配置文件(需要重启机器)</h5><p>修改&#x2F;etc&#x2F;selinux&#x2F;config 文件<br>将SELINUX&#x3D;enforcing改为SELINUX&#x3D;disabled<br>重启机器即可</p><h4 id="2-执行下面的命令"><a href="#2-执行下面的命令" class="headerlink" title="2.执行下面的命令"></a>2.执行下面的命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot加入websocket</title>
      <link href="/2024/01/30/springboot%E5%8A%A0%E5%85%A5websocket/"/>
      <url>/2024/01/30/springboot%E5%8A%A0%E5%85%A5websocket/</url>
      
        <content type="html"><![CDATA[<h3 id="一、引入spring-websocket依赖"><a href="#一、引入spring-websocket依赖" class="headerlink" title="一、引入spring-websocket依赖"></a>一、引入<code>spring-websocket</code>依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、开启websocket支持"><a href="#二、开启websocket支持" class="headerlink" title="二、开启websocket支持"></a>二、开启websocket支持</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启websocket的支持</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServerEndpointExporter <span class="title function_">serverEndpointExporter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ServerEndpointExporter</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、websocket工具类"><a href="#三、websocket工具类" class="headerlink" title="三、websocket工具类"></a>三、websocket工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * websocket工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">WebsocketUtil</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 服务端存放客户端对应的session对象</span></span><br><span class="line"><span class="comment">     * key:clientId value:session</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String, Session&gt; WEBSOCKET_CLIENT_SESSION_MAP = Maps.newConcurrentMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 服务端发送消息给所有客户端</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sendMessageToAllClient</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (WEBSOCKET_CLIENT_SESSION_MAP.isEmpty()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;当前无连接的客户端, 消息忽略推送.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        WEBSOCKET_CLIENT_SESSION_MAP.forEach((sessionId, session) -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                session.getBasicRemote().sendText(message);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;服务端向客户端[&#123;&#125;]发送消息异常.&quot;</span>, sessionId, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、websocket服务端"><a href="#四、websocket服务端" class="headerlink" title="四、websocket服务端"></a>四、websocket服务端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * websocket服务端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ServerEndpoint(&quot;/websocket&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketServer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String sessionId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * websocket建立连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnOpen</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(Session session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.sessionId = session.getId();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.containsKey(<span class="built_in">this</span>.sessionId)) &#123;</span><br><span class="line">            WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.remove(<span class="built_in">this</span>.sessionId).close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.put(<span class="built_in">this</span>.sessionId, session);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;客户端[&#123;&#125;]建立websocket连接.&quot;</span>, <span class="built_in">this</span>.sessionId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭socket连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnClose</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClose</span><span class="params">(Session session)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.containsKey(session.getId())) &#123;</span><br><span class="line">            WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.remove(session.getId());</span><br><span class="line">            log.info(<span class="string">&quot;客户端[&#123;&#125;]断开websocket连接.&quot;</span>, session.getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收到消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnMessage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">OnMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接收到客户端&#123;&#125;发送的消息:[&#123;&#125;].&quot;</span>, <span class="built_in">this</span>.sessionId, message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 连接错误</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> error</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnError</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">OnError</span><span class="params">(Session session, Throwable error)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;websocket连接错误,&quot;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h3><blockquote><p>推荐使用Chrome插件–Simple Web Socket Client</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2024/01/25/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/01/25/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="代理相关"><a href="#代理相关" class="headerlink" title="代理相关"></a>代理相关</h2><h3 id="设置http代理"><a href="#设置http代理" class="headerlink" title="设置http代理"></a>设置http代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy 127.0.0.1:7890</span><br><span class="line">git config --global https.proxy 127.0.0.1:7890</span><br></pre></td></tr></table></figure><h3 id="查看http代理"><a href="#查看http代理" class="headerlink" title="查看http代理"></a>查看http代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --get http.proxy</span><br><span class="line">git config --global --get https.proxy</span><br></pre></td></tr></table></figure><h3 id="取消设置http代理"><a href="#取消设置http代理" class="headerlink" title="取消设置http代理"></a>取消设置http代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
