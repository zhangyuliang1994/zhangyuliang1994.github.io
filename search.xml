<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>day-2-复杂度分析（下）</title>
      <link href="/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-day-2-%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-day-2-%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="一、最好、最坏情况时间复杂度"><a href="#一、最好、最坏情况时间复杂度" class="headerlink" title="一、最好、最坏情况时间复杂度"></a>一、最好、最坏情况时间复杂度</h3><p>最好情况时间复杂度：在最理想的情况下，执行这段代码的时间复杂度。<br>最坏情况时间复杂度：在最糟糕的情况下，执行这段代码的时间复杂度。</p><h3 id="二、平均情况时间复杂度"><a href="#二、平均情况时间复杂度" class="headerlink" title="二、平均情况时间复杂度"></a>二、平均情况时间复杂度</h3><p>平均时间复杂度：也叫加权平均时间复杂度，</p><p>在大多数情况下，我们并不需要区分最好、最坏、平均情况时间复杂度，我们使用一个复杂度就可以满足需求了。<br>只有同一块代码在不同的情况下，时间复杂度有量级的差距，我们才会使用这三种复杂度表示法来区分。</p><h3 id="三、均摊时间复杂度"><a href="#三、均摊时间复杂度" class="headerlink" title="三、均摊时间复杂度"></a>三、均摊时间复杂度</h3><p>对一个数据结构进行一组连续操作中，大部分情况下时间复杂度都很低，只有个别情况下时间复杂度比较高，而且这些操作之间存在前后连贯的时序关系，这个时候，我们就可以将这一组操作放在一块儿分析，看是否能将较高时间复杂度那次操作的耗时，平摊到其他那些时间复杂度比较低的操作上。而且，在能够应用均摊时间复杂度分析的场合，一般均摊时间复杂度就等于最好情况时间复杂度。</p><p>均摊时间复杂度就是一种特殊的平均时间复杂度，没必要花太多精力区分它们。</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/%E5%B7%A5%E5%85%B7-Docker%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/"/>
      <url>/%E5%B7%A5%E5%85%B7-Docker%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_43681154/article/details/128001031">https://blog.csdn.net/qq_43681154/article/details/128001031</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>day-1-复杂度分析（上）</title>
      <link href="/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-day-1-%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
      <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-day-1-%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="一、为什么需要复杂度分析"><a href="#一、为什么需要复杂度分析" class="headerlink" title="一、为什么需要复杂度分析"></a>一、为什么需要复杂度分析</h3><h4 id="1-1-事后统计法的局限性"><a href="#1-1-事后统计法的局限性" class="headerlink" title="1.1 事后统计法的局限性"></a>1.1 事后统计法的局限性</h4><ul><li>测试结果非常依赖测试环境</li><li>测试结果受数据规模的影响很大</li></ul><h4 id="1-2-大-O-复杂度表示法"><a href="#1-2-大-O-复杂度表示法" class="headerlink" title="1.2 大 O 复杂度表示法"></a>1.2 大 O 复杂度表示法</h4><p>大 O 时间复杂度表示法表示代码执行时间随数据规模增长的变化趋势，也叫渐进时间复杂度，简称时间复杂度。</p><h3 id="二、时间复杂度分析方法"><a href="#二、时间复杂度分析方法" class="headerlink" title="二、时间复杂度分析方法"></a>二、时间复杂度分析方法</h3><h4 id="2-1-只关注循环执行次数最多的一段代码"><a href="#2-1-只关注循环执行次数最多的一段代码" class="headerlink" title="2.1 只关注循环执行次数最多的一段代码"></a>2.1 只关注循环执行次数最多的一段代码</h4><h4 id="2-2-加法法则：总复杂度等于量级最大的那段代码的复杂度"><a href="#2-2-加法法则：总复杂度等于量级最大的那段代码的复杂度" class="headerlink" title="2.2 加法法则：总复杂度等于量级最大的那段代码的复杂度"></a>2.2 加法法则：总复杂度等于量级最大的那段代码的复杂度</h4><h4 id="2-3-乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积"><a href="#2-3-乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积" class="headerlink" title="2.3 乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积"></a>2.3 乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积</h4><h3 id="三、几种常见时间复杂度分析"><a href="#三、几种常见时间复杂度分析" class="headerlink" title="三、几种常见时间复杂度分析"></a>三、几种常见时间复杂度分析</h3><h4 id="3-1-非多项式量级"><a href="#3-1-非多项式量级" class="headerlink" title="3.1 非多项式量级"></a>3.1 非多项式量级</h4><p>非多项式量级只有两个：O(2的n次方)和O(n!)</p><h4 id="3-2-多项式量级"><a href="#3-2-多项式量级" class="headerlink" title="3.2 多项式量级"></a>3.2 多项式量级</h4><h5 id="a-O-1"><a href="#a-O-1" class="headerlink" title="a) O(1)"></a>a) O(1)</h5><p>一般情况下，只要算法中不存在循环语句、递归语句，即使有成千上万行的代码，其时间复杂度也是O(1)。</p><h5 id="b-O-logn-、O-nlogn"><a href="#b-O-logn-、O-nlogn" class="headerlink" title="b) O(logn)、O(nlogn)"></a>b) O(logn)、O(nlogn)</h5><p>对数阶时间复杂度非常常见，同时也是最难分析的一种时间复杂度。<br>归并排序、快速排序的时间复杂度都是O(nlogn)。</p><h5 id="c-O-m-n-、O-m-n"><a href="#c-O-m-n-、O-m-n" class="headerlink" title="c) O(m + n)、O(m * n)"></a>c) O(m + n)、O(m * n)</h5><p>T1(m) + T2(n) &#x3D; O(f(m) + g(n))<br>T1(m) * T2(n) &#x3D; O(f(m)  *   f(n))</p><h3 id="四、空间复杂度分析"><a href="#四、空间复杂度分析" class="headerlink" title="四、空间复杂度分析"></a>四、空间复杂度分析</h3><p>空间复杂度全称为渐进空间复杂度，表示算法的存储空间与规模之间的增长关系。</p><h3 id="五、小结"><a href="#五、小结" class="headerlink" title="五、小结"></a>五、小结</h3><p>复杂度也叫渐进复杂度，包括时间复杂度和空间复杂度，用来分析算法执行效率与数据规模之间的增长关系，可以粗略地表示，越高阶复杂度的算法，执行效率越低。</p><p>常见的复杂度并不多，从低阶到高阶有：O(1)、O(logn)、O(n)、O(nlogn)、O(n2 )。</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《数据结构与算法》学习计划</title>
      <link href="/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
      <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E3%80%8B%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h3 id="一、总计划"><a href="#一、总计划" class="headerlink" title="一、总计划"></a>一、总计划</h3><table><thead><tr><th align="center">阶段</th><th align="center">学习时间</th><th align="center">学习模块</th></tr></thead><tbody><tr><td align="center">第一阶段</td><td align="center">6月10日-6月23日</td><td align="center">复杂度分析、数组、链表、栈、队列<br> 递归、排序、二分查找</td></tr><tr><td align="center">第二阶段</td><td align="center">6月24日-7月7日</td><td align="center">散列表、二叉树、堆、堆排序、图<br>BF&#x2F;RK字符串匹配算法、Trie 树<br> 深度&#x2F;广度优先搜索</td></tr><tr><td align="center">第三阶段</td><td align="center">7月8日-7月21日</td><td align="center">四种算法思想、跳表、拓扑排序<br>Dijkstra算法、A*算法、B+树</td></tr><tr><td align="center">第四阶段</td><td align="center">7月22日-8月4日</td><td align="center">位图、BM、KMP、AC自动机、红黑树<br> 哈希算法、5个实战</td></tr></tbody></table><h3 id="二、分计划"><a href="#二、分计划" class="headerlink" title="二、分计划"></a>二、分计划</h3><h4 id="2-1-第一阶段"><a href="#2-1-第一阶段" class="headerlink" title="2.1 第一阶段"></a>2.1 第一阶段</h4><table><thead><tr><th>状态</th><th>专栏章节</th><th>章节名称</th><th>计划完成时间</th><th>实际完成时间</th></tr></thead><tbody><tr><td>✅</td><td>03</td><td>复杂度分析（上）：如何分析、统计算法的执行效率和资源消耗</td><td>6月10日</td><td>6月12日</td></tr><tr><td>✅</td><td>04</td><td>复杂度分析（下）：浅析最好、最坏、平均、均摊时间复杂度</td><td>6月10日</td><td>6月13日</td></tr><tr><td></td><td>05</td><td>数组：为什么很多编程语言中数组都从0开始编号？</td><td>6月11日</td><td></td></tr><tr><td></td><td>06</td><td>链表（上）如何实现LRU缓存淘汰算法？</td><td>6月12日</td><td></td></tr><tr><td></td><td>07</td><td>链表（下）如何轻松写出正确的链表代码？</td><td>6月14日</td><td></td></tr><tr><td></td><td>08</td><td>栈：如何实现浏览器的前进和后退功能？</td><td>6月15日</td><td></td></tr><tr><td></td><td>09</td><td>队列：队列在线程池等有限资源中的应用</td><td>6月16日</td><td></td></tr><tr><td></td><td>10</td><td>递归：如何用三行代码找到“最终推荐人”？</td><td>6月16日</td><td></td></tr><tr><td></td><td>11</td><td>排序（上）：为什么插入排序比冒泡排序更受欢迎？</td><td>6月18日</td><td></td></tr><tr><td></td><td>12</td><td>排序（下）：如何用快排思想在O(n)内查找第K大元素？</td><td>6月19日</td><td></td></tr><tr><td></td><td>13</td><td>线性排序：如何根据年龄给100万用户数据排序？</td><td>6月21日</td><td></td></tr><tr><td></td><td>14</td><td>排序优化：如何实现一个通用的、高性能的排序函数？</td><td>6月22日</td><td></td></tr><tr><td></td><td>15</td><td>二分查找（上）：如何用最省内存的方式实现快速查找功能？</td><td>6月23日</td><td></td></tr><tr><td></td><td>16</td><td>二分查找（下）：如何快速定位IP对应的省份地址？</td><td>6月23日</td><td></td></tr></tbody></table><h4 id="2-2-第二阶段"><a href="#2-2-第二阶段" class="headerlink" title="2.2 第二阶段"></a>2.2 第二阶段</h4><table><thead><tr><th>状态</th><th>专栏章节</th><th>章节名称</th><th>计划完成时间</th><th>实际完成时间</th></tr></thead><tbody><tr><td></td><td>17</td><td>跳表：为什么Redis一定要用跳表来实现有序集合？</td><td>6月25日</td><td></td></tr><tr><td></td><td>18</td><td>散列表（上）：Word文档中的单词拼写检查功能是如何实现的？</td><td>6月26日</td><td></td></tr><tr><td></td><td>19</td><td>散列表（中）：如何打造一个工业级水平的散列表？</td><td>6月27日</td><td></td></tr><tr><td></td><td>20</td><td>散列表（下）：为什么散列表和链表经常会一起使用？</td><td>6月28日</td><td></td></tr><tr><td></td><td>21</td><td>哈希算法（上）：如何防止数据库中的用户信息被脱库？</td><td>6月29日</td><td></td></tr><tr><td></td><td>22</td><td>哈希算法（下）：哈希算法在分布式系统中有哪些应用？</td><td>6月30日</td><td></td></tr><tr><td></td><td>23</td><td>二叉树基础（上）：什么样的二叉树适合用数组来存储？</td><td>6月30日</td><td></td></tr><tr><td></td><td>24</td><td>二叉树基础（下）：有了如此高效的散列表，为什么还需要二叉树？</td><td>7月2日</td><td></td></tr><tr><td></td><td>25</td><td>红黑树（上）：为什么工程中都用红黑树这种二叉树？</td><td>7月3日</td><td></td></tr><tr><td></td><td>26</td><td>红黑树（下）：掌握这些技巧，你也可以实现一个红黑树？</td><td>7月4日</td><td></td></tr><tr><td></td><td>27</td><td>递归树：如何借助树来求解递归算法的时间复杂度？</td><td>7月5日</td><td></td></tr><tr><td></td><td>28</td><td>堆和堆排序：为什么说堆排序没有快速排序快？</td><td>7月6日</td><td></td></tr><tr><td></td><td>29</td><td>堆的应用：如何快速获取到Top 10最热门的搜索关键词？</td><td>7月7日</td><td></td></tr></tbody></table><h4 id="2-3-第三阶段"><a href="#2-3-第三阶段" class="headerlink" title="2.3 第三阶段"></a>2.3 第三阶段</h4><table><thead><tr><th>状态</th><th>专栏章节</th><th>章节名称</th><th>计划完成时间</th><th>实际完成时间</th></tr></thead><tbody><tr><td></td><td>30</td><td>图的表示：如何存储微博、微信等社交网络中的好友关系？</td><td>7月9日</td><td></td></tr><tr><td></td><td>31</td><td>深度和广度优先搜索：如何找出社交网络中的三度好友关系？</td><td>7月10日</td><td></td></tr><tr><td></td><td>32</td><td>字符串匹配基础（上）：如何借助哈希算法实现高效字符串匹配？</td><td>7月11日</td><td></td></tr><tr><td></td><td>33</td><td>字符串匹配基础（中）：如何实现文本编辑器中的查找功能？</td><td>7月12日</td><td></td></tr><tr><td></td><td>34</td><td>字符串匹配基础（下）：如何借助BM算法轻松理解KMP算法？</td><td>7月13日</td><td></td></tr><tr><td></td><td>35</td><td>Trie树：如何实现搜索引擎的搜索关键词提示功能？</td><td>7月14日</td><td></td></tr><tr><td></td><td>36</td><td>AC自动机：如何用多模式串匹配实现敏感词过滤功能？</td><td>7月14日</td><td></td></tr><tr><td></td><td>37</td><td>贪心算法：如何用贪心算法实现Huffman压缩编码？</td><td>7月16日</td><td></td></tr><tr><td></td><td>38</td><td>分治算法：谈一谈大规模计算框架MapReduce中的分治思想</td><td>7月17日</td><td></td></tr><tr><td></td><td>39</td><td>回溯算法：从电影《蝴蝶效应》中学习回溯算法的核心思想</td><td>7月19日</td><td></td></tr><tr><td></td><td>40</td><td>初试动态规划：如何巧妙解决“双十一”购物时的凑单问题？</td><td>7月20日</td><td></td></tr><tr><td></td><td>41</td><td>动态规划理论：一篇文章带你彻底搞懂最优子结构、无后效性和重复子问题</td><td>7月21日</td><td></td></tr><tr><td></td><td>42</td><td>动态规划实战：如何实现搜索引擎中的拼写纠错功能？</td><td>7月21日</td><td></td></tr></tbody></table><h4 id="2-4-第四阶段"><a href="#2-4-第四阶段" class="headerlink" title="2.4 第四阶段"></a>2.4 第四阶段</h4><table><thead><tr><th>状态</th><th>专栏章节</th><th>章节名称</th><th>计划完成时间</th><th>实际完成时间</th></tr></thead><tbody><tr><td></td><td>43</td><td>拓扑排序：如何确定代码源文件的编译依赖关系？</td><td>7月23日</td><td></td></tr><tr><td></td><td>44</td><td>最短路径：地图软件是如何计算出最优出行路径的？</td><td>7月24日</td><td></td></tr><tr><td></td><td>45</td><td>位图：如何实现网页爬虫中的URL去重功能？</td><td>7月25日</td><td></td></tr><tr><td></td><td>46</td><td>概率统计：如何利用朴素贝叶斯算法过滤垃圾短信？</td><td>7月26日</td><td></td></tr><tr><td></td><td>47</td><td>向量空间：如何实现一个简单的音乐推荐系统？</td><td>7月27日</td><td></td></tr><tr><td></td><td>48</td><td>B+树：MySQL数据库索引是如何实现的？</td><td>7月28日</td><td></td></tr><tr><td></td><td>49</td><td>搜索：如何用A*搜索算法实现游戏中的寻路功能？</td><td>7月28日</td><td></td></tr><tr><td></td><td>50</td><td>索引：如何在海量数据中快速查找某个数据？</td><td>7月30日</td><td></td></tr><tr><td></td><td>51</td><td>并行算法：如何利用并行处理提高算法的执行效率？</td><td>7月31日</td><td></td></tr><tr><td></td><td>52</td><td>算法实战（一）：剖析Redis常用数据类型对应的数据结构</td><td>8月1日</td><td></td></tr><tr><td></td><td>53</td><td>算法实战（二）：剖析搜索引擎背后的经典数据结构与算法</td><td>8月2日</td><td></td></tr><tr><td></td><td>54</td><td>算法实战（三）：剖析高性能队列Disruptor背后的数据结构与算法</td><td>8月3日</td><td></td></tr><tr><td></td><td>55</td><td>算法实战（四）：剖析微服务接口鉴权限流背后的数据结构与算法</td><td>8月4日</td><td></td></tr><tr><td></td><td>56</td><td>算法实战（五）：如何用学过的数据结构与算法实现一个短网址系统？</td><td>8月4日</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GEO类型的使用</title>
      <link href="/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-GEO%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-GEO%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="一、应用场景"><a href="#一、应用场景" class="headerlink" title="一、应用场景"></a>一、应用场景</h3><p>基础信息服务（Location- Based Service，LBS）<br>LBS应用访问的数据是和人或物关联的一组经纬度信息，而且要能查询相邻的经纬度范围。<br>例如：搜索“附近的餐馆”、在打车软件上叫车。</p><h3 id="二、GEO的底层结构"><a href="#二、GEO的底层结构" class="headerlink" title="二、GEO的底层结构"></a>二、GEO的底层结构</h3><p>GEO 类型的底层数据结构是用 Sorted Set 来实现的。</p><h4 id="2-1-GeoHash编码方法"><a href="#2-1-GeoHash编码方法" class="headerlink" title="2.1 GeoHash编码方法"></a>2.1 GeoHash编码方法</h4><p>基本原理：“二分区间，区间编码”<br>比如：当我们要对一组经纬度进行GeoHash编码时，我们要先对经度和纬度分别编码，然后再把经纬度各自的编码组合成一个最终编码。<br>比如：我们要对 经度116.37 ，纬度39.86进行编码</p><p>对于一个地理位置来说，它的经度范围是 [-180,180]。GeoHash 编码会把一个经度值编码成一个 N 位的二进制值，我们来对经度范围[-180,180]做 N 次的二分区操作，其中 N 可以自定义。<br>我们将 116.37 做5次分区，如图所示<br><img src="https://minio.zhangyl.top/img/2024/redis_study_geo_lon.png"></p><p>纬度的范围是[-90,90]，我们将 39.86 做5次分区，如下图所示：<br><img src="https://minio.zhangyl.top/img/2024/redis_study_geo_lat.png"><br>将经纬度各自的编码进行组合，如下图所示：<br><img src="https://minio.zhangyl.top/img/2024/redis_study_geo_hash.png"></p><p>使用 GeoHash 编码后，我们相当于把整个地理空间分成了一个个方格，每个方格对应了 GeoHash 的一个分区。</p><p>比如：我们分别对经度和纬度做一次二分区，如下图所示：</p><p>这 4 个分区对应了 4 个方格，每个方格覆盖了一定范围内的经纬度值，分区越多，每个方格能覆盖到的地理空间就越小，也就越精准。我们把所有方格的编码值映射到一维空间时，相邻方格的 GeoHash 编码值基本也是接近的。<br><img src="https://minio.zhangyl.top/img/2024/redis_study_geo_hash_zone.png"><br>所以，我们使用 Sorted Set 范围查询得到的相近编码值，在实际的地理空间上，也是相邻的方格，这就可以实现 LBS 应用“搜索附近的人或物”的功能了。</p><h4 id="2-2-如何操作-GEO-类型"><a href="#2-2-如何操作-GEO-类型" class="headerlink" title="2.2 如何操作 GEO 类型"></a>2.2 如何操作 GEO 类型</h4><ul><li>GEOADD 命令：用于把一组经纬度信息和相对应的一个 ID 记录到 GEO 类型集合中；</li><li>GEORADIUS 命令：会根据输入的经纬度位置，查找以这个经纬度为中心的一定范围内的其他元素。当然，我们可以自己定义这个范围。</li></ul><h3 id="三、小结"><a href="#三、小结" class="headerlink" title="三、小结"></a>三、小结</h3><p>GEO类型可以记录经纬度形式的地理位置信息，被广泛地应用在LBS服务中。GEO本身并没有设计新的底层数据结构，而是直接使用了 Sorted Set 集合类型。</p><p>GEO 类型使用 GeoHash 编码方法实现了经纬度到 Sorted Set 中元素权重分数的转换，这其中的两个关键机制就是对二维地图做区间划分，以及对区间进行编码。一组经纬度落在某个区间后，就用区间的编码值来表示，并把编码值作为 Sorted Set 元素的权重分数。这样一来，我们就可以把经纬度保存到 Sorted Set 中，利用 Sorted Set 提供的“按权重进行有序范围查找”的特性，实现 LBS 服务中频繁使用的“搜索附近”的需求。</p><p>GEO 属于 Redis 提供的扩展数据类型。扩展数据类型有两种实现途径：一种是基于现有的数据类型，通过数据编码或是实现新的操作的方式，来实现扩展数据类型，例如基于 Sorted Set 和 GeoHash 编码实现 GEO，以及基于 String 和位操作实现 Bitmap；另一种就是开发自定义的数据类型，具体的操作是增加新数据类型的定义，实现创建和释放函数，实现新数据类型支持的命令操作。</p>]]></content>
      
      
      <categories>
          
          <category> Redis学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis用来统计的集合</title>
      <link href="/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Redis%E7%94%A8%E6%9D%A5%E7%BB%9F%E8%AE%A1%E7%9A%84%E9%9B%86%E5%90%88/"/>
      <url>/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Redis%E7%94%A8%E6%9D%A5%E7%BB%9F%E8%AE%A1%E7%9A%84%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h3 id="一、常用的集合统计模式"><a href="#一、常用的集合统计模式" class="headerlink" title="一、常用的集合统计模式"></a>一、常用的集合统计模式</h3><ul><li>聚合统计</li><li>排序统计</li><li>二值状态统计</li><li>基数统计</li></ul><h3 id="二、聚合统计"><a href="#二、聚合统计" class="headerlink" title="二、聚合统计"></a>二、聚合统计</h3><p>聚合统计指统计多个集合元素的聚合结果，包括：</p><ul><li>统计多个集合的共有元素（交集统计）</li><li>把两个集合相比，统计其中一个集合独有的元素（差集统计）</li><li>统计多个集合的所有元素（并集统计）</li></ul><p>当你需要对多个集合进行聚合计算时，Set类型会是一个非常不错的选择。</p><p>但是Set的差集、并集和交集的计算复杂度较高，在数据量较大的情况下，如果直接执行这些计算，会导致Redis实例阻塞。建议从主从集群中选择一个从库，让它专门负责聚合计算，或者是把数据读取到客户端，在客户端来完成聚合统计，这样就可以规避阻塞主库实例和其他从库实例的风险了。</p><p>举例：统计手机App每天的新增用户数和第二天的留存用户数</p><h3 id="三、排序统计"><a href="#三、排序统计" class="headerlink" title="三、排序统计"></a>三、排序统计</h3><p>Redis常用的集合类型有：List、Hash、Set、Sorted Set，其中List和Sorted Set属于有序集合。</p><ul><li>List是按照元素进入List的顺序进行排序的</li><li>Sorted Set可以根据元素的权重来排序，我们可以自己来决定每个元素的权重值</li></ul><p>在面对需要展示最新列表、排行榜等场景时，如果数据更新频繁或者需要分页显示，优先使用Sorted Set。</p><h3 id="四、二值状态统计"><a href="#四、二值状态统计" class="headerlink" title="四、二值状态统计"></a>四、二值状态统计</h3><p>二值状态是指集合元素的取值就只有 0 和 1 两种。比如在签到打卡的场景中，我们只要记录签到（1）或未签到（0）。</p><p>Bitmap适合这种场景，它是Redis提供的扩展数据类型。</p><p>Bitmap本身是用String类型作为底层数据结构实现的一种统计二值状态的数据类型。</p><p>String类型是会保存为二进制的字节数组，所以，Redis就把字节数组的每个 bit 位利用起来，用来表示一个元素的二值状态。可以把 Bitmap 看作是一个 bit 数组。</p><p>在记录海量数据时，Bitmap能够有效地节省内存空间。</p><h3 id="五、基数统计"><a href="#五、基数统计" class="headerlink" title="五、基数统计"></a>五、基数统计</h3><p>基数统计是指统计一个集合中不重复的元素个数。比如统计网页的UV（Unique Visitor，独立访客）。</p><p>HyperLogLog是一种用于统计基数的数据集合类型。它的最大优势在于，当集合元素数量非常多时，它计算基数所需的空间总是固定的，而且还很小。</p><p>HyperLogLog的统计规则是基于概率完成的，所以它给出的统计结果是有一定误差的，标准误差率是 0.81%。</p><p>虽然误差率不大，但是，如果你需要精确统计结果的话，最好用Set或Hash类型。</p><h3 id="六、小结"><a href="#六、小结" class="headerlink" title="六、小结"></a>六、小结</h3><p><img src="https://minio.zhangyl.top/img/2024/redis_study_12_statistics.png"></p><p>Set和Sorted Set都支持多种聚合统计，不过，对于差集计算来说，只有Set支持。Bitmap也能做多个Bitmap间的聚合计算，包括与、或和异或操作。</p><p>当需要进行排序统计时，List中的元素虽然有序，但是一旦有新元素插入，原来的元素在List中的位置就会移动，那么，按位置读取的排序结果可能就不准确了。而Sorted Set本身是按照集合元素的权重排序，可以准确地有序获取结果，所以建议优先使用它。</p><p>如果我们记录的数据只有0和1两个值的状态，Bitmap会是一个很好的选择，这主要归功于Bitmap对于一个数据只用1个bit记录，可以节省内存。</p><p>对于基数统计来说，如果集合元素量达到亿级别而且不需要精确统计时，建议使用HyperLogLog。</p><h3 id="七、每课一问"><a href="#七、每课一问" class="headerlink" title="七、每课一问"></a>七、每课一问</h3><p>其他使用场景？</p><p>使用Sorted Set可以统计一段时间内的在线用户数。</p>]]></content>
      
      
      <categories>
          
          <category> Redis学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Obsidian配合Hexo写博客</title>
      <link href="/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3-%E4%BD%BF%E7%94%A8Obsidian%E9%85%8D%E5%90%88Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
      <url>/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3-%E4%BD%BF%E7%94%A8Obsidian%E9%85%8D%E5%90%88Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>用hexo写了二十篇左右文章的时候，发现有时候挺麻烦的。<br>刚开始写的时候，写个markdown，push一下，然后看着 GitHub Actions在那跑，还是挺兴奋的，但是时间长了，就会觉得麻烦。</p><p>前两天尝试在语雀上写了两篇，感觉在线编辑器挺好用的，但是同步hexo太麻烦了。<br>而且语雀和Notion都没有本地存储，这让我这个保守派很慌。</p><p>最终选了Obsidian，基本没啥学习成本，而且客户端的编辑器也很好用，git设置定时提交，也不用老想着提交代码了，专注于内容本身即可。</p><p>主要参考了这篇博客：<br><a href="https://zahui.fan/posts/ldle4xfe/">https://zahui.fan/posts/ldle4xfe/</a><br>还有这篇：<br><a href="https://uuanqin.top/p/d4bc55f2/index.html">https://uuanqin.top/p/d4bc55f2/index.html</a></p><p>除此之外，还做了两项内容：</p><ul><li>图片由本地改为存放在MinIO里</li><li>手机端和电脑端都装了 <code>RemptelySync</code> 插件，方便同步到手机查看，用的是坚果云的Webdav。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用语法与命令</title>
      <link href="/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3-hexo%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E4%B8%8E%E5%91%BD%E4%BB%A4/"/>
      <url>/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3-hexo%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E4%B8%8E%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="一、常用指令"><a href="#一、常用指令" class="headerlink" title="一、常用指令"></a>一、常用指令</h3><h4 id="1-1-新建文章"><a href="#1-1-新建文章" class="headerlink" title="1.1 新建文章"></a>1.1 新建文章</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>e.g</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure><h4 id="1-2-在子目录下创建文章"><a href="#1-2-在子目录下创建文章" class="headerlink" title="1.2 在子目录下创建文章"></a>1.2 在子目录下创建文章</h4><p>默认新建的文件都在 <code>_posts</code>目录下，文章多了，不方便查找，可以在 <code>_posts</code>目录下建立一个目录，如 <code>dir</code>，那么就可以使用如下命令在 <code>_posts/dir</code> 目录下新建文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new -p dir/test -s &quot;test&quot; &quot;测试&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">test</span>是文章名称</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试是文章标题</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p, --path自定义新文章的路径</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-s, --slug文章的 Slug，作为新文章的文件名和发布后的 URL</span></span><br></pre></td></tr></table></figure><h3 id="二、常用语法"><a href="#二、常用语法" class="headerlink" title="二、常用语法"></a>二、常用语法</h3><h4 id="2-1-站内文章跳转方法"><a href="#2-1-站内文章跳转方法" class="headerlink" title="2.1 站内文章跳转方法"></a>2.1 站内文章跳转方法</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link 文章标题 %&#125;</span><br></pre></td></tr></table></figure><p>e.g</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link nginx常用命令 %&#125;</span><br></pre></td></tr></table></figure><a href="/nginx-nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/" title="nginx常用命令">nginx常用命令</a><h4 id="2-2-单篇文章置顶"><a href="#2-2-单篇文章置顶" class="headerlink" title="2.2 单篇文章置顶"></a>2.2 单篇文章置顶</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sticky:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redirect与forward的区别</title>
      <link href="/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-redirect%E4%B8%8Eforward%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-redirect%E4%B8%8Eforward%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>springboot国际化配置</title>
      <link href="/spring-springboot%E5%9B%BD%E9%99%85%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
      <url>/spring-springboot%E5%9B%BD%E9%99%85%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>TODO：暂时留个坑，待整理好思路再写</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Boss软件使用的一些小Tip</title>
      <link href="/%E9%9D%A2%E8%AF%95-Boss%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8FTip/"/>
      <url>/%E9%9D%A2%E8%AF%95-Boss%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8FTip/</url>
      
        <content type="html"><![CDATA[<h3 id="一、在线简历的个人描述"><a href="#一、在线简历的个人描述" class="headerlink" title="一、在线简历的个人描述"></a>一、在线简历的个人描述</h3><p>在线简历200字的个人描述，好好写，boss后台根据此内容打标签，HR会根据标签筛选。</p><h3 id="二、主动刷新"><a href="#二、主动刷新" class="headerlink" title="二、主动刷新"></a>二、主动刷新</h3><p>在线简历需要每天打磨，每天主动更新几个字，重复下简历的自动刷新。</p><h3 id="三、求职状态"><a href="#三、求职状态" class="headerlink" title="三、求职状态"></a>三、求职状态</h3><p>求职状态选择随时到岗、在职月内到岗，这样岗位会优先推荐。</p><h3 id="四、打招呼"><a href="#四、打招呼" class="headerlink" title="四、打招呼"></a>四、打招呼</h3><p>boss上的打招呼一定要真心打，别用默认的提示，太容易重复了，要自己多想几句话，体现自己的诚恳、自己的舔狗、自己的称赞之类的，可以不用自动打招呼的设置。</p><h3 id="五、简历曝光"><a href="#五、简历曝光" class="headerlink" title="五、简历曝光"></a>五、简历曝光</h3><p>有些简历天天24小时曝光也不太好，可以设置为晚上和周末隐藏，白天打开。</p><h3 id="六、匹配度"><a href="#六、匹配度" class="headerlink" title="六、匹配度"></a>六、匹配度</h3><p>简历上别写那种简称，有些HR不懂技术，就看岗位匹配度，是否有匹配的技术词、匹配的要求描述等。</p><h3 id="七、回复HR"><a href="#七、回复HR" class="headerlink" title="七、回复HR"></a>七、回复HR</h3><p>HR和你主动沟通了，一定要回复，别打个招呼就走了，就去看下一个了，HR但凡能回复你任何一个字，你就可以通过boss发送附件简历了，每天也要回看下，哪些HR等你的回复。</p><h3 id="八、搜索职位"><a href="#八、搜索职位" class="headerlink" title="八、搜索职位"></a>八、搜索职位</h3><p>boss有些职位是推荐给你的，大家不能单纯就靠着推荐的数据沟通，自己应该没事就搜索一些职位，也能发现很多没有投递的职位信息，搜索词可以是技术、业务、职位名称、过滤条件等。</p><h3 id="九、重视面试机会"><a href="#九、重视面试机会" class="headerlink" title="九、重视面试机会"></a>九、重视面试机会</h3><p>在投递附件简历前或后，职位发布人会问你是否同意转Go、是否接受出差、是否同意XXX，不太建议拒绝，应该先应承下来。毕竟不是一面就入职了，还有二面和三面，况且一面不一定能过呢。前期我们要的是面试机会，而不是公司的待遇和条件。</p><h3 id="十、主动沟通"><a href="#十、主动沟通" class="headerlink" title="十、主动沟通"></a>十、主动沟通</h3><p>对于每日自己主动沟通的职位，最好反复的翻一下。有些职位你有的时候，再回复几句，人家就会从已读不回变成回复你，不要坚信只发送一句打招呼的话就行了，每天就能上线沟通100+，完全可以多翻几次，有些上线了，再诚恳的聊一下。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试的一些小Tip</title>
      <link href="/%E9%9D%A2%E8%AF%95-%E9%9D%A2%E8%AF%95%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8FTip/"/>
      <url>/%E9%9D%A2%E8%AF%95-%E9%9D%A2%E8%AF%95%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8FTip/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近读了JavaGuide的一篇文章，是讲面试的，写得挺好的，链接如下：<a href="https://mp.weixin.qq.com/s/LgBOVwIAZekevqGMuw_0JA">https://mp.weixin.qq.com/s/LgBOVwIAZekevqGMuw_0JA</a><br>知识星球里作者对此总结了下，现摘录如下：</p></blockquote><h3 id="一、不要等完全准备好了再面试"><a href="#一、不要等完全准备好了再面试" class="headerlink" title="一、不要等完全准备好了再面试"></a>一、不要等完全准备好了再面试</h3><p>准备个七八成的时候，就可以尽快开始面试了，不要拖！可以先拿非目标公司练练手，查漏补缺下，提高信心。一定不要等准备完全再去面试，不太现实。就算是准备非常久，你去参加面试可能还是会有不会的问题，这很正常。准备六个月，未必效果比三个月好，人的投入，是有边界递减效应的，短时间高效率的准备，也许比拉长战线更有效果。迈出第一步很难，但只要迈出第一步之后，后续都会顺利很多。</p><h3 id="二、重视简历"><a href="#二、重视简历" class="headerlink" title="二、重视简历"></a>二、重视简历</h3><p>一定一定一定要重视简历，持续地完善自己的简历，尤其是投递简历之前和你投递很多公司没有面试之后，要多反思一下是不是简历存在问题，可以找其他人帮忙看一看。即使你已经找到了工作，定期完善自己的简历亦是对自己过往工作的总结，还是非常有必要的。</p><h3 id="三、面试遇到不会的问题很正常"><a href="#三、面试遇到不会的问题很正常" class="headerlink" title="三、面试遇到不会的问题很正常"></a>三、面试遇到不会的问题很正常</h3><p>在面试过程中，遇到不会的问题，首先要做的是快速回顾自己过往的知识，看是否能找到突破口。如果实在没有思路的话，可以真诚地向面试官要一些提示，比如谈谈你对这个问题的理解以及困惑点。一定不要觉得向面试官要提示很可耻，只要沟通没问题，这其实是很正常的。最怕的就是自己不会，还乱回答一通，这样会让面试官觉得你技术态度有问题。</p><h3 id="四、认真对待每一场面试"><a href="#四、认真对待每一场面试" class="headerlink" title="四、认真对待每一场面试"></a>四、认真对待每一场面试</h3><p>认真对待每一场面试，现在这个环境，每一个机会都是非常难得的，很多面试机会，错过了就不再有。每一场面试，都尽量拿比较好的状态去面。并且，面试之后还要进行复盘，复盘的主要目的是补自己的短板，不然你面试再多也没用。</p><h3 id="五、不要抵触八股文和基础问题"><a href="#五、不要抵触八股文和基础问题" class="headerlink" title="五、不要抵触八股文和基础问题"></a>五、不要抵触八股文和基础问题</h3><p>一定不要抱着一种思想，觉得八股文或者基础问题的考查意义不大。如果你抱着这种思想复习的话，那效果可能不会太好。实际上，个人认为还是很有意义的，八股文或者基础性的知识在日常开发中也会需要经常用到。例如，线程池这块的拒绝策略、核心参数配置什么的，如果你不了解，实际项目中使用线程池可能就用的不是很明白，容易出问题。而且，其实这种基础性的问题是最容易准备的，像各种底层原理、系统设计、场景题以及深挖你的项目这类才是最难的！</p><h3 id="六、自己整理一份八股笔记"><a href="#六、自己整理一份八股笔记" class="headerlink" title="六、自己整理一份八股笔记"></a>六、自己整理一份八股笔记</h3><p>看八股的时候，尽量自己也整理一下笔记，方便后续复习，也顺便加深印象。笔记尽量避免长篇幅的直接复制，尽量把握重点，按照自己的学习习惯去整理。</p><h3 id="七、不要幻想找到完美的工作"><a href="#七、不要幻想找到完美的工作" class="headerlink" title="七、不要幻想找到完美的工作"></a>七、不要幻想找到完美的工作</h3><p>“钱多事少干的爽”几乎是所有打工人的终极梦想，但这样的工作真的有吗？或许有，但为什么就落到你身上了呢？“钱多”、“事少”、“干的爽”三者里面能满足一个就很不错了，钱多一般事也多，事少一般钱也少，“干的爽”更是一个非常主观的因素，自己不去干一干真不知道，干了也可以调整。就好比找对象一样，是不可能找到一个完全如你心意的对象，这是不现实的！要懂得取舍，学会接受，接受不完美的工作，接受不完美的自己。</p><h3 id="八、工作和面试是不冲突的"><a href="#八、工作和面试是不冲突的" class="headerlink" title="八、工作和面试是不冲突的"></a>八、工作和面试是不冲突的</h3><p>如果确定自己要离职，那就好好准备面试。如果不离职的话，就认真对待现有的工作。另外，工作和面试，不是绝对冲突的。只要有想离开的想法，每天再忙也能抽点时间出来准备的，把刷抖音、打游戏的时间拿一部分出来准备面试，做好规划，每天时间充足就拉短周期，每天时间少就拉长周期。</p><h3 id="九、正确看待面试失败"><a href="#九、正确看待面试失败" class="headerlink" title="九、正确看待面试失败"></a>九、正确看待面试失败</h3><p>面试失败，是一件很正常的事情，“面了不一定能过，过了不一定能Offer”，我们可能因为各种原因挂掉。但是，千万不能因为失败几次，就灰心丧气，面一次总结一次，查缺补漏，面的多了，自然会面了，就能面过了。</p><h3 id="十、保持礼貌和谦虚"><a href="#十、保持礼貌和谦虚" class="headerlink" title="十、保持礼貌和谦虚"></a>十、保持礼貌和谦虚</h3><p>面试你对于面试官来说可能并不是一个好的差事，面试官的一些话你可能也不认可。不管怎样，尽量保持礼貌和谦虚，体现自己的素养。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用liquibase管理数据库变更</title>
      <link href="/spring-%E4%BD%BF%E7%94%A8liquibase%E7%AE%A1%E7%90%86%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%98%E6%9B%B4/"/>
      <url>/spring-%E4%BD%BF%E7%94%A8liquibase%E7%AE%A1%E7%90%86%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%98%E6%9B%B4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>项目更新或升级时，总会因为缺失数据库字段导致部分功能无法正常使用。<br>liquibase可以很好的解决这个问题。网上对于其使用有很多例子，但我更喜欢的还是根据sql文件来记录变更。</p></blockquote><h3 id="一、引入依赖"><a href="#一、引入依赖" class="headerlink" title="一、引入依赖"></a>一、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.liquibase<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>liquibase-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、文件配置"><a href="#二、文件配置" class="headerlink" title="二、文件配置"></a>二、文件配置</h3><h4 id="2-1-spring配置"><a href="#2-1-spring配置" class="headerlink" title="2.1 spring配置"></a>2.1 spring配置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">liquibase:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">change-log:</span> <span class="string">sql/changelog.yml</span></span><br></pre></td></tr></table></figure><ul><li><code>enabled</code> 属性设置为true</li><li><code>change-log</code> 属性设置sql变更的配置文件</li></ul><h4 id="2-2-change-log文件配置"><a href="#2-2-change-log文件配置" class="headerlink" title="2.2 change-log文件配置"></a>2.2 change-log文件配置</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">databaseChangeLog:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">changeSet:</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">init</span></span><br><span class="line">      <span class="attr">author:</span> <span class="string">zhangyuliang</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">初始化</span></span><br><span class="line">      <span class="attr">changes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">sqlFile:</span></span><br><span class="line">            <span class="attr">splitStatements:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">stripComments:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">sql/init.sql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">tagDatabase:</span></span><br><span class="line">            <span class="attr">tag:</span> <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">changeSet:</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">init.data</span></span><br><span class="line">      <span class="attr">author:</span> <span class="string">zhangyuliang</span></span><br><span class="line">      <span class="attr">comment:</span> <span class="string">初始化数据</span></span><br><span class="line">      <span class="attr">changes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">sqlFile:</span></span><br><span class="line">            <span class="attr">splitStatements:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">stripComments:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">sql/init.data.sql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">tagDatabase:</span></span><br><span class="line">            <span class="attr">tag:</span> <span class="number">1.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h4 id="2-3-change-log文件及sql文件在项目中的展示"><a href="#2-3-change-log文件及sql文件在项目中的展示" class="headerlink" title="2.3 change-log文件及sql文件在项目中的展示"></a>2.3 change-log文件及sql文件在项目中的展示</h4><p><img src="https://minio.zhangyl.top/img/2024/liqubase_idea_show.png" alt="本地图片"></p><h3 id="三、sql执行"><a href="#三、sql执行" class="headerlink" title="三、sql执行"></a>三、sql执行</h3><p>liquibase开启后，会在项目启动的时候执行，注意sql文件不要报错，否则会启动失败。<br>另外，sql文件建立后千万不要修改文件，否则liquibase会认为是相同id的sql变更，会重新执行，而 <code>changeSet</code> 的id相同会执行失败，导致启动失败。<br>建议以追加sql文件的形式来进行数据库变更，任何字段的修改都遵循这一原则，这样即使不同版本的项目进行更新时，都能根据 <code>changeSet</code> 补全sql变更。</p><p><img src="https://minio.zhangyl.top/img/2024/liqubase_data_source.png" alt="本地图片"></p><p>sql执行成功后，数据库会多两张表，<code>DATABASECHANGELOG</code> 和 <code>DATABASECHANGELOGLOCK</code>。<br><code>DATABASECHANGELOG</code>表里记录了sql的变更日志。<br>如果确实要修改sql文件，则需要在数据库里删除 ID &#x3D; <code>changeSet</code> 的记录。</p>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git commit 代码提交规范</title>
      <link href="/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-git-commit-%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"/>
      <url>/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-git-commit-%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>TODO:暂时留个坑，待整理好思路再写</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 开发相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>smart-doc使用注释生成接口文档</title>
      <link href="/spring-smart-doc%E4%BD%BF%E7%94%A8%E6%B3%A8%E9%87%8A%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
      <url>/spring-smart-doc%E4%BD%BF%E7%94%A8%E6%B3%A8%E9%87%8A%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="一、写在前面"><a href="#一、写在前面" class="headerlink" title="一、写在前面"></a>一、写在前面</h3><p>程序员最讨厌的事情就是写文档，尤其是接口文档。之前也用过swagger，但是感觉每个类、方法、字段都要加注解，实在是太麻烦了，最近发现smart-doc很好的解决了这个问题，因为它是无侵入式的，只要正常写Java注释，它就能帮你生成各种格式的接口文档。<br>官方文档地址：<a href="https://smart-doc-group.github.io/#/zh-cn/">https://smart-doc-group.github.io/#/zh-cn/</a></p><h3 id="二、maven插件配置"><a href="#二、maven插件配置" class="headerlink" title="二、maven插件配置"></a>二、maven插件配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.shalousun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>smart-doc-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>html<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configFile</span>&gt;</span>./src/main/resources/smart-doc.json<span class="tag">&lt;/<span class="name">configFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span>          </span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里生成的格式为html，配置文件目录为 <code>./src/main/resources/smart-doc.json</code></p><h3 id="三、配置文件"><a href="#三、配置文件" class="headerlink" title="三、配置文件"></a>三、配置文件</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;serverUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://127.0.0.1:8236&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pathPrefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;isStrict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;allInOne&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;target/classes/static/doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;coverOld&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;createDebugPage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span><span class="string">&quot;atelier_cave-light&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;allInOneDocFileName&quot;</span><span class="punctuation">:</span><span class="string">&quot;index.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;errorCodeDictionaries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;响应码&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;enumClassName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.aizz.mindmingle.common.ResponseCode&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;codeField&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;descField&quot;</span><span class="punctuation">:</span> <span class="string">&quot;desc&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;revisionLogs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;revisionTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-11-24 10:30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;create&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zhangyuliang&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;remarks&quot;</span><span class="punctuation">:</span> <span class="string">&quot;创建&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里配置了接口文档的生成目录和响应码等信息，还可以配置静态常量和数据字典，具体可参考官方文档。</p><h3 id="四、生成接口文档"><a href="#四、生成接口文档" class="headerlink" title="四、生成接口文档"></a>四、生成接口文档</h3><p>正常 <code>mvn clean package</code> 可以生成接口文档<br>也可通过命令生成<br><img src="https://minio.zhangyl.top/img/2024/smart-doc_mvn.png" alt="本地图片"></p><p>下图为 <code>smart-doc.json</code> 配置文件和生成后的接口文档在项目中的展示<br><img src="https://minio.zhangyl.top/img/2024/smart-doc_idea_show.png" alt="本地图片"></p><h3 id="五、文档展示"><a href="#五、文档展示" class="headerlink" title="五、文档展示"></a>五、文档展示</h3><h4 id="5-1-本地"><a href="#5-1-本地" class="headerlink" title="5.1 本地"></a>5.1 本地</h4><p>本地直接打开html文件即可<br><img src="https://minio.zhangyl.top/img/2024/smart-doc_local_html.png" alt="本地图片"></p><h4 id="5-2-服务器"><a href="#5-2-服务器" class="headerlink" title="5.2 服务器"></a>5.2 服务器</h4><p>远端访问格式为——ip:端口&#x2F;context-path&#x2F;doc&#x2F;index.html<br><img src="https://minio.zhangyl.top/img/2024/smart-doc_server_html.png" alt="本地图片"></p>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot使用jasypt加密解密</title>
      <link href="/spring-springboot%E4%BD%BF%E7%94%A8jasypt%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
      <url>/spring-springboot%E4%BD%BF%E7%94%A8jasypt%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>项目上有些配置需要加密，比如数据库的密码，jasypt可以实现加密解密功能。</p></blockquote><h3 id="一、引入依赖"><a href="#一、引入依赖" class="headerlink" title="一、引入依赖"></a>一、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h3><h4 id="加密前"><a href="#加密前" class="headerlink" title="加密前"></a>加密前</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><h4 id="加密后"><a href="#加密后" class="headerlink" title="加密后"></a>加密后</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ENC(slZULLmbudl1M6/43iq6y8100XQ4DlqnxtToLxtUODxqlsCm02M2ujbx6ayy4j92)</span></span><br></pre></td></tr></table></figure><h3 id="三、加密"><a href="#三、加密" class="headerlink" title="三、加密"></a>三、加密</h3><p>这里以ASE256为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 指定算法</span></span><br><span class="line"><span class="type">AES256TextEncryptor</span> <span class="variable">textEncryptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AES256TextEncryptor</span>();</span><br><span class="line"><span class="comment">// 指定秘钥</span></span><br><span class="line">textEncryptor.setPassword(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="comment">// 生成加密数据</span></span><br><span class="line"><span class="type">String</span> <span class="variable">encrypt</span> <span class="operator">=</span> textEncryptor.encrypt(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">System.out.println(encrypt);</span><br><span class="line"><span class="comment">// slZULLmbudl1M6/43iq6y8100XQ4DlqnxtToLxtUODxqlsCm02M2ujbx6ayy4j92</span></span><br></pre></td></tr></table></figure><h3 id="四、解密"><a href="#四、解密" class="headerlink" title="四、解密"></a>四、解密</h3><h4 id="4-1-IDE设置"><a href="#4-1-IDE设置" class="headerlink" title="4.1 IDE设置"></a>4.1 IDE设置</h4><p>vm options加入如下代码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Djasypt.encryptor.password=test</span><br></pre></td></tr></table></figure><p><img src="https://minio.zhangyl.top/img/2024/jasypt_idea_config.png" alt="本地图片"></p><h4 id="4-2-运行"><a href="#4-2-运行" class="headerlink" title="4.2 运行"></a>4.2 运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -Djasypt.encryptor.password=test xxx.jar</span><br></pre></td></tr></table></figure><h4 id="4-3-测试类"><a href="#4-3-测试类" class="headerlink" title="4.3 测试类"></a>4.3 测试类</h4><p>对于需要单元测试的类，只要在类上加 <code>@Import(EnableEncryptableProperties.class)</code> 注解即可</p>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot鉴权</title>
      <link href="/spring-springboot%E9%89%B4%E6%9D%83/"/>
      <url>/spring-springboot%E9%89%B4%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>TODO:暂时留个坑，待整理好思路再写</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx常用命令</title>
      <link href="/nginx-nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/nginx-nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="一、重启"><a href="#一、重启" class="headerlink" title="一、重启"></a>一、重启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="二、判断配置文件是否正确"><a href="#二、判断配置文件是否正确" class="headerlink" title="二、判断配置文件是否正确"></a>二、判断配置文件是否正确</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t -c /usr/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure><h3 id="三、代理配置"><a href="#三、代理配置" class="headerlink" title="三、代理配置"></a>三、代理配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name yourdomain.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:8080;  # Spring Boot 应用的地址</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>proxy_set_header可以代理访问权限和请求头，如后端加了白名单，此处配置就很必要</p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义校验注解</title>
      <link href="/spring-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/"/>
      <url>/spring-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>近期在用 <code>javax.validation</code> 做校验的时候发现没有对 <code>BigDecimal</code> 类型进行校验的注解，便自己动手写了一个。</p><h3 id="二、定义注解及校验类"><a href="#二、定义注解及校验类" class="headerlink" title="二、定义注解及校验类"></a>二、定义注解及校验类</h3><h4 id="2-1-注解类"><a href="#2-1-注解类" class="headerlink" title="2.1 注解类"></a>2.1 注解类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = BigDecimalRangeValidator.class)</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> BigDecimalRange &#123;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">min</span><span class="params">()</span> <span class="keyword">default</span> Double.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">max</span><span class="params">()</span> <span class="keyword">default</span> Double.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;Validation failed&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-校验类"><a href="#2-2-校验类" class="headerlink" title="2.2 校验类"></a>2.2 校验类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BigDecimalRangeValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;BigDecimalRange, BigDecimal&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal minValue;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal maxValue;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(BigDecimalRange constraintAnnotation)</span> &#123;</span><br><span class="line">        minValue = <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(constraintAnnotation.min());</span><br><span class="line">        maxValue = <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(constraintAnnotation.max());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(BigDecimal value, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value.compareTo(minValue) &gt;= <span class="number">0</span> &amp;&amp; value.compareTo(maxValue) &lt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、使用注解"><a href="#三、使用注解" class="headerlink" title="三、使用注解"></a>三、使用注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Example</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@BigDecimalRange(min = 0.1, max = 9.9, message = &quot;测试字段的范围为0.1~9.9&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal testValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot基于ldap协议实现用户认证</title>
      <link href="/spring-springboot%E5%9F%BA%E4%BA%8Eldap%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/"/>
      <url>/spring-springboot%E5%9F%BA%E4%BA%8Eldap%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="一、引入spring-boot-starter-data-ldap依赖"><a href="#一、引入spring-boot-starter-data-ldap依赖" class="headerlink" title="一、引入spring-boot-starter-data-ldap依赖"></a>一、引入<code>spring-boot-starter-data-ldap</code>依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-ldap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">ldap:</span></span><br><span class="line">    <span class="attr">urls:</span> <span class="string">ldap://xx.xx.xx.xx:389</span></span><br><span class="line">    <span class="attr">base:</span> <span class="string">OU=xxx,DC=xxx,DC=com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">xxx@xx.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>在配置文件里填入地址、baseDN、用户名和密码信息</p><h3 id="三、创建用户对象类"><a href="#三、创建用户对象类" class="headerlink" title="三、创建用户对象类"></a>三、创建用户对象类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.annotation.JSONField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.odm.annotations.Attribute;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.odm.annotations.Entry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.odm.annotations.Id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.Name;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ldap协议person类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entry(objectClasses = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 唯一标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@JSONField(serialize = false)</span></span><br><span class="line">    <span class="keyword">private</span> Name distinguishedName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录账号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Attribute(name = &quot;sAMAccountName&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String loginName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户姓名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Attribute(name = &quot;cn&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Attribute(name = &quot;userAccountControl&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer userAccountControl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDelete;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、用户登录"><a href="#四、用户登录" class="headerlink" title="四、用户登录"></a>四、用户登录</h3><h4 id="4-1-示例代码"><a href="#4-1-示例代码" class="headerlink" title="4.1 示例代码"></a>4.1 示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.ldap.core.LdapTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.filter.EqualsFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> LdapTemplate ldapTemplate;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LDAP_USERNAME_ATTR</span> <span class="operator">=</span> <span class="string">&quot;sAMAccountName&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String userName, String password)</span> &#123;</span><br><span class="line">    <span class="type">EqualsFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EqualsFilter</span>(LDAP_USERNAME_ATTR, userName);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> ldapTemplate.authenticate(<span class="string">&quot;&quot;</span>, filter.toString(), password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本逻辑就是调用ldapTemplate的authenticate方法来进行认证。</p><h4 id="4-2-完整代码"><a href="#4-2-完整代码" class="headerlink" title="4.2 完整代码"></a>4.2 完整代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cowave.meter.admin.user.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.IdUtil;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.access.Access;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.filter.security.AccessToken;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.filter.security.TokenService;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.support.mybatis.page.PageDO;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.util.Asserts;</span><br><span class="line"><span class="keyword">import</span> com.cowave.commons.framework.util.AssertsException;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.dao.SysDeptDao;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.dao.SysRoleDao;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.dao.SysUserDao;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.Person;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.SysDept;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.SysRole;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.service.LdapService;</span><br><span class="line"><span class="keyword">import</span> com.cowave.meter.admin.user.service.SysUserService;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.core.LdapTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.filter.EqualsFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ldap.query.LdapQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ObjectUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LdapServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">LdapService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LdapTemplate ldapTemplate;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TokenService tokenService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysUserDao sysUserDao;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysUserService userService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysDeptDao sysDeptDao;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SysRoleDao sysRoleDao;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">BCryptPasswordEncoder</span> <span class="variable">bcryptPasswordEncoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LDAP_USERNAME_ATTR</span> <span class="operator">=</span> <span class="string">&quot;sAMAccountName&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 域账号登录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AccessToken <span class="title function_">domainLogin</span><span class="params">(String userName, String password)</span> &#123;</span><br><span class="line">        <span class="type">EqualsFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EqualsFilter</span>(LDAP_USERNAME_ATTR, userName);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">authenticate</span> <span class="operator">=</span> ldapTemplate.authenticate(<span class="string">&quot;&quot;</span>, filter.toString(), password);</span><br><span class="line">        <span class="keyword">if</span> (!authenticate) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertsException</span>(<span class="string">&quot;auth.failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">domainUserAccountExist</span> <span class="operator">=</span> sysUserDao.domainUserAccountExist(userName);</span><br><span class="line">        <span class="keyword">if</span> (Boolean.FALSE.equals(domainUserAccountExist)) &#123;</span><br><span class="line">            <span class="type">LdapQueryBuilder</span> <span class="variable">ldapQuery</span> <span class="operator">=</span> LdapQueryBuilder.query();</span><br><span class="line">            ldapQuery.filter(filter);</span><br><span class="line">            <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> ldapTemplate.findOne(ldapQuery, Person.class);</span><br><span class="line">            <span class="keyword">if</span> (ObjectUtils.isEmpty(person)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AssertsException</span>(<span class="string">&quot;user.notexist&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysUser</span>();</span><br><span class="line">            sysUser.setUserAccount(userName);</span><br><span class="line">            Asserts.isFalse(userService.userAccountExist(sysUser), <span class="string">&quot;账户名已存在&quot;</span>);</span><br><span class="line">            sysUser.setUserName(person.getName());</span><br><span class="line">            sysUser.setUserPasswd(bcryptPasswordEncoder.encode(password));</span><br><span class="line">            sysUser.setDomainUserAccount(userName);</span><br><span class="line">            <span class="comment">// 设置部门</span></span><br><span class="line">            <span class="type">SysDept</span> <span class="variable">sysDept</span> <span class="operator">=</span> sysDeptDao.queryRootDept();</span><br><span class="line">            <span class="keyword">if</span> (!ObjectUtils.isEmpty(sysDept)) &#123;</span><br><span class="line">                sysUser.setDeptId(sysDept.getDeptId());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 设置角色</span></span><br><span class="line">            PageDO&lt;SysRole&gt; sysRolePageDO = sysRoleDao.queryPage(<span class="literal">null</span>, <span class="string">&quot;2&quot;</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (sysRolePageDO.getPages() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">SysRole</span> <span class="variable">sysRole</span> <span class="operator">=</span> sysRolePageDO.getList().get(<span class="number">0</span>);</span><br><span class="line">                sysUser.setRoleId(sysRole.getRoleId());</span><br><span class="line">            &#125;</span><br><span class="line">            userService.saveOrUpdate(sysUser);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> sysUserDao.getByDomainUserAccount(userName);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> sysUser.getUserId();</span><br><span class="line">        <span class="type">AccessToken</span> <span class="variable">accessToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AccessToken</span>();</span><br><span class="line">        accessToken.setType(AccessToken.TYPE_USER);</span><br><span class="line"></span><br><span class="line">        accessToken.setUserCode(userId);</span><br><span class="line">        accessToken.setUsername(sysUser.getUserAccount());</span><br><span class="line">        accessToken.setUserNick(sysUser.getUserName());</span><br><span class="line">        accessToken.setDeptCode(sysUser.getDeptId());</span><br><span class="line">        accessToken.setRoles(List.of(sysUser.getRoleId()));</span><br><span class="line"></span><br><span class="line">        accessToken.setLoginIp(Access.ip());</span><br><span class="line">        accessToken.setLoginTime(Access.time());</span><br><span class="line">        accessToken.setAccessIp(Access.ip());</span><br><span class="line">        accessToken.setAccessTime(Access.time());</span><br><span class="line">        accessToken.setId(IdUtil.fastSimpleUUID());</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> tokenService.newToken(accessToken);</span><br><span class="line">        accessToken.setToken(token);</span><br><span class="line">        <span class="keyword">return</span> accessToken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-判断用户是否禁用"><a href="#4-3-判断用户是否禁用" class="headerlink" title="4.3 判断用户是否禁用"></a>4.3 判断用户是否禁用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据AD域的userAccountControl属性判断用户是否禁用</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> userAccContr</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> Boolean <span class="title function_">getUserDelete</span><span class="params">(<span class="type">int</span> userAccContr)</span> &#123;</span><br><span class="line">    <span class="comment">//TRUSTED_TO_AUTH_FOR_DELEGATION - 允许该帐户进行委派</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">16777216</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">16777216</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//PASSWORD_EXPIRED - (Windows 2000/Windows Server 2003) 用户的密码已过期</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">8388608</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">8388608</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//DONT_REQ_PREAUTH</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">4194304</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">4194304</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//USE_DES_KEY_ONLY - (Windows 2000/Windows Server 2003) 将此用户限制为仅使用数据加密标准 (DES) 加密类型的密钥</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2097152</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">2097152</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//NOT_DELEGATED - 设置此标志后，即使将服务帐户设置为信任其进行 Kerberos 委派，也不会将用户的安全上下文委派给该服务</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">1048576</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">1048576</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//TRUSTED_FOR_DELEGATION - 设置此标志后，将信任运行服务的服务帐户（用户或计算机帐户）进行 Kerberos 委派。</span></span><br><span class="line">    <span class="comment">// 任何此类服务都可模拟请求该服务的客户端。若要允许服务进行 Kerberos 委派，必须在服务帐户的 userAccountControl 属性上设置此标志</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">524288</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">524288</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SMARTCARD_REQUIRED - 设置此标志后，将强制用户使用智能卡登录</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">262144</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">262144</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MNS_LOGON_ACCOUNT - 这是 MNS 登录帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">131072</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">131072</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//DONT_EXPIRE_PASSWORD-密码永不过期</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">65536</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">65536</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MNS_LOGON_ACCOUNT - 这是 MNS 登录帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2097152</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">2097152</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SERVER_TRUST_ACCOUNT - 这是属于该域的域控制器的计算机帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">8192</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">8192</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//WORKSTATION_TRUST_ACCOUNT - 这是运行 Microsoft Windows NT 4.0 Workstation、Microsoft Windows NT 4.0 Server、</span></span><br><span class="line">    <span class="comment">// Microsoft Windows 2000 Professional 或 Windows 2000 Server 并且属于该域的计算机的计算机帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">4096</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">4096</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//INTERDOMAIN_TRUST_ACCOUNT - 对于信任其他域的系统域，此属性允许信任该系统域的帐户</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2048</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">2048</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//NORMAL_ACCOUNT - 这是表示典型用户的默认帐户类型</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">512</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">512</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//TEMP_DUPLICATE_ACCOUNT - 此帐户属于其主帐户位于另一个域中的用户。此帐户为用户提供访问该域的权限，</span></span><br><span class="line">    <span class="comment">// 但不提供访问信任该域的任何域的权限。有时将这种帐户称为“本地用户帐户”</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">256</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">256</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//ENCRYPTED_TEXT_PASSWORD_ALLOWED - 用户可以发送加密的密码</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">128</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//PASSWD_CANT_CHANGE - 用户不能更改密码。可以读取此标志，但不能直接设置它</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">64</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">64</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//PASSWD_NOTREQD - 不需要密码</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">32</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">32</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//LOCKOUT</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">16</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//HOMEDIR_REQUIRED - 需要主文件夹</span></span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">8</span>) &#123;</span><br><span class="line">        userAccContr = userAccContr - <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (userAccContr &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> ldap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jira配置Ldap服务器进行用户认证</title>
      <link href="/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/"/>
      <url>/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-Jira%E9%85%8D%E7%BD%AELdap%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Jira需要通过公司的域账号来登录，配置过程中踩了点坑，记录一下。</p></blockquote><h3 id="一、配置步骤"><a href="#一、配置步骤" class="headerlink" title="一、配置步骤"></a>一、配置步骤</h3><h4 id="1-1-添加LDAP认证"><a href="#1-1-添加LDAP认证" class="headerlink" title="1.1 添加LDAP认证"></a>1.1 添加LDAP认证</h4><p>用管理员账户登录Jira页面，在配置页面，找到“用户管理” -&gt; 点击“用户目录” -&gt; 点击“添加目录” -&gt; 选择“内部LDAP认证”<br><img src="https://minio.zhangyl.top/img/2024/jira_ldap_add.png" alt="本地图片"></p><h4 id="1-2-配置服务器"><a href="#1-2-配置服务器" class="headerlink" title="1.2 配置服务器"></a>1.2 配置服务器</h4><p>目录类型选择“OpenLDAP”，填写主机名、端口、用户名及密码，提前创建组，并在“默认组成员”输入框内填写该组名，防止域账户没有权限登录Jira系统<br><img src="https://minio.zhangyl.top/img/2024/jira_ldap_server.png" alt="本地图片"></p><h4 id="1-3-设置基本DN和用户名属性"><a href="#1-3-设置基本DN和用户名属性" class="headerlink" title="1.3 设置基本DN和用户名属性"></a>1.3 设置基本DN和用户名属性</h4><p>这里要看ldap服务器的具体值，我这个版本用户名属性的默认值是cn，但ldap服务器的是sAMAccountName<br><img src="https://minio.zhangyl.top/img/2024/jira_ldap_ldap.png" alt="本地图片"></p><h4 id="1-4-设置用户模式属性"><a href="#1-4-设置用户模式属性" class="headerlink" title="1.4 设置用户模式属性"></a>1.4 设置用户模式属性</h4><p><img src="https://minio.zhangyl.top/img/2024/jira_ldap_user.png" alt="本地图片"><br>虽然这些属性有默认值，但还是要看ldap服务器的具体值，我的ldap服务器的用户对象类是person，用户唯一的ID属性是distinguishedName</p><h4 id="1-5-设置组模式"><a href="#1-5-设置组模式" class="headerlink" title="1.5 设置组模式"></a>1.5 设置组模式</h4><p><img src="https://minio.zhangyl.top/img/2024/jira_ldap_group.png" alt="本地图片"><br>这里我改了组对象类。</p><h3 id="二、推荐工具"><a href="#二、推荐工具" class="headerlink" title="二、推荐工具"></a>二、推荐工具</h3><p>我用的是Ldap Browser，还不错。<br>下载地址： <a href="https://ldapbrowserwindows.com/">https://ldapbrowserwindows.com/</a></p><blockquote><p>在Jira配置Ldap过程中遇到的最大问题就是属性对不上，通过这个工具就能很方便的去查看了。<br>另外，添加目录时可以选择“LDAP”，这个模式下报错提示更清晰一些，我在配置过程中也是通过这个模式来发现属性配置错误的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 开发相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ldap </tag>
            
            <tag> jira </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postman常用技巧</title>
      <link href="/%E5%B7%A5%E5%85%B7-Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/%E5%B7%A5%E5%85%B7-Postman%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="一、全局Token设置"><a href="#一、全局Token设置" class="headerlink" title="一、全局Token设置"></a>一、全局Token设置</h3><h4 id="1-登录时获取token"><a href="#1-登录时获取token" class="headerlink" title="1.登录时获取token"></a>1.登录时获取token</h4><p><img src="https://minio.zhangyl.top/img/2024/postman_get_token.png" alt="本地图片"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取登录接口的返回数据</span></span><br><span class="line"><span class="keyword">var</span> jsondata=pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line"><span class="comment">// 判断登录是否成功</span></span><br><span class="line"><span class="keyword">if</span> (jsondata.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="comment">// 获取token并设置到环境变量token的值</span></span><br><span class="line">    <span class="keyword">var</span> token=jsondata.<span class="property">data</span>.<span class="property">token</span></span><br><span class="line">    pm.<span class="property">globals</span>.<span class="title function_">set</span>(<span class="string">&quot;token&quot;</span>,token)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(jsondata.<span class="property">msg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-Collection设置token"><a href="#2-Collection设置token" class="headerlink" title="2.Collection设置token"></a>2.Collection设置token</h4><p><img src="https://minio.zhangyl.top/img/2024/postman_set_token.png" alt="本地图片"></p><h3 id="二、接口自动执行"><a href="#二、接口自动执行" class="headerlink" title="二、接口自动执行"></a>二、接口自动执行</h3><p><img src="https://minio.zhangyl.top/img/2024/postman_run_collection.png" alt="本地图片"></p><p>右击Collection，选择 “Run Collection”；</p><p>选中要执行的接口，在右侧填入执行次数和间隔时间，然后点击 “Run 测试自动执行”即可。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> postman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot logback日志显示时间差8小时</title>
      <link href="/spring-spring-boot-logback%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4%E5%B7%AE8%E5%B0%8F%E6%97%B6/"/>
      <url>/spring-spring-boot-logback%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4%E5%B7%AE8%E5%B0%8F%E6%97%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>logback日志的时间和系统时间对不上，总是差几个小时，设置了项目时区没有用，项目里 new Date() 的时间没问题。</p><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>同一个项目部署在两台机器上，之前那台时间是正常的，这台时间不正常，暂时没找到具体原因。</p><h3 id="三、解决方法"><a href="#三、解决方法" class="headerlink" title="三、解决方法"></a>三、解决方法</h3><p>改一下logback的配置文件 pattern 的时间格式</p><ul><li>修改前<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss:SSS&#125; %thread [%level] %m%n&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>修改后<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss:SSS,CTT&#125; %thread [%level] %m%n&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>在yyyy-MM-dd HH:mm:ss.SSS后面加一个指定的时区,用逗号分隔开。如yyyy-MM-dd HH:mm:ss.SSS,CTT。CTT为上海时间。改完后确实可以了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> logback </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websocket 自动断开报错, java.io.EOFException 解决办法</title>
      <link href="/nginx-websocket%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF-java-io-EOFException-null/"/>
      <url>/nginx-websocket%E8%BF%9E%E6%8E%A5%E9%94%99%E8%AF%AF-java-io-EOFException-null/</url>
      
        <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>websocket 服务使用 Nginx 反向代理后，发现会自动断开，查看日志如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">2024-02-22 18:51:05:964 1901020240223104709130 [ERROR] websocket连接错误,</span><br><span class="line">java.io.EOFException: null</span><br><span class="line">        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.fillReadBuffer(NioEndpoint.java:1339)</span><br><span class="line">        at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(NioEndpoint.java:1226)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:75)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsFrameServer.doOnDataAvailable(WsFrameServer.java:183)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsFrameServer.notifyDataAvailable(WsFrameServer.java:162)</span><br><span class="line">        at org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.upgradeDispatch(WsHttpUpgradeHandler.java:157)</span><br><span class="line">        at org.apache.coyote.http11.upgrade.UpgradeProcessorInternal.dispatch(UpgradeProcessorInternal.java:60)</span><br><span class="line">        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:59)</span><br><span class="line">        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)</span><br><span class="line">        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)</span><br><span class="line">        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)</span><br><span class="line">        at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)</span><br><span class="line">        at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)</span><br><span class="line">        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">        at java.base/java.lang.Thread.run(Thread.java:842)</span><br></pre></td></tr></table></figure><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>使用了 Nginx 反向代理后，超过60秒没有数据传输的连接会自动断开。</p><h3 id="三、解决方法"><a href="#三、解决方法" class="headerlink" title="三、解决方法"></a>三、解决方法</h3><h4 id="1-修改-nginx-配置"><a href="#1-修改-nginx-配置" class="headerlink" title="1. 修改 nginx 配置"></a>1. 修改 nginx 配置</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_read_timeout 3600;</span><br></pre></td></tr></table></figure><p>将超时时间改长一点</p><h3 id="2-前端或者后端加个定时任务发个心跳包就好了，例如："><a href="#2-前端或者后端加个定时任务发个心跳包就好了，例如：" class="headerlink" title="2. 前端或者后端加个定时任务发个心跳包就好了，例如："></a>2. 前端或者后端加个定时任务发个心跳包就好了，例如：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定时任务，由于使用nginx反向代理，60秒无数据传输会断开</span></span><br><span class="line">timer=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (websocket.<span class="property">readyState</span> == <span class="number">1</span>) &#123;</span><br><span class="line">websocket.<span class="title function_">send</span>(<span class="string">&quot;心跳包检测&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//IM连接已断开</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="number">50</span> * <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><blockquote><p>我两种方法都用了，<br>首先将超时时间改成了一小时。<br>然后让前端没半小时给后台发送一次心跳，后台响应心跳。<br><img src="https://minio.zhangyl.top/img/2024/chrome_plugin_websocket.png" alt="本地图片"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BigDecimal比较大小</title>
      <link href="/java-BigDecimal%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F/"/>
      <url>/java-BigDecimal%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这个类是Java里精确计算的类，下面说一下BidDecimal大小、相等的判断</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">1.0</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> BigDecimal.valueOf(<span class="number">1.000</span>);</span><br></pre></td></tr></table></figure><h3 id="一、比较方法"><a href="#一、比较方法" class="headerlink" title="一、比较方法"></a>一、比较方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> a.compareTo(b);</span><br></pre></td></tr></table></figure><h3 id="二、比较结果"><a href="#二、比较结果" class="headerlink" title="二、比较结果"></a>二、比较结果</h3><ul><li>-1 小于</li><li>0  等于</li><li>1  大于</li></ul><blockquote><p>判断时以大于0、小于0、等于0为条件。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java通过SSH连接路由器，输入命令并读取响应</title>
      <link href="/java-Java%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%93%8D%E5%BA%94/"/>
      <url>/java-Java%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E5%B9%B6%E8%AF%BB%E5%8F%96%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近需要读取和修改华为路由器的配置，使用Java语言开发，通过SSH连接，输入命令并读取响应。</p></blockquote><h3 id="1-添加mwiede-jsch依赖"><a href="#1-添加mwiede-jsch依赖" class="headerlink" title="1.添加mwiede/jsch依赖"></a>1.添加<code>mwiede/jsch</code>依赖</h3><ul><li>如果使用Maven，可以在pom.xml文件中添加以下依赖:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.mwiede<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>如果使用Gradle，则添加到build.gradle文件:<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.github.mwiede:jsch:0.2.15&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-使用Jsch创建SSH连接，输入命令并返回响应"><a href="#2-使用Jsch创建SSH连接，输入命令并返回响应" class="headerlink" title="2.使用Jsch创建SSH连接，输入命令并返回响应"></a>2.使用<code>Jsch</code>创建SSH连接，输入命令并返回响应</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">*  获取SSH命令响应</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> userName        用户名</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> password        密码</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> host              ip地址</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> port              端口</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> commandList  命令列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getShellCmdRes</span><span class="params">(String userName, String password, String host, Integer port, List&lt;String&gt; commandList)</span> <span class="keyword">throws</span> JSchException, IOException &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">JSch</span> <span class="variable">jsch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSch</span>();</span><br><span class="line">        <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> jsch.getSession(userName, host, port());</span><br><span class="line">        session.setPassword(password);</span><br><span class="line">        session.setConfig(<span class="string">&quot;StrictHostKeyChecking&quot;</span>, <span class="string">&quot;no&quot;</span>);</span><br><span class="line">        session.connect();</span><br><span class="line"></span><br><span class="line">        <span class="type">ChannelShell</span> <span class="variable">channel</span> <span class="operator">=</span> (ChannelShell) session.openChannel(<span class="string">&quot;shell&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取输入输出流</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">inputStreamForTheChannel</span> <span class="operator">=</span> channel.getOutputStream();</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">outputStreamForTheChannel</span> <span class="operator">=</span> channel.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接通道</span></span><br><span class="line">        channel.connect();</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintStream</span> <span class="variable">commander</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintStream</span>(inputStreamForTheChannel, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] tmp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (outputStreamForTheChannel.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> outputStreamForTheChannel.read(tmp, <span class="number">0</span>, <span class="number">1024</span>);</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">String</span> <span class="variable">output</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(tmp, <span class="number">0</span>, i);</span><br><span class="line">                <span class="comment">// 读取响应</span></span><br><span class="line">                stringBuilder.append(output);</span><br><span class="line">                stringBuilder.append(System.lineSeparator());</span><br><span class="line">                <span class="comment">// 发送命令</span></span><br><span class="line">                commandList.forEach(command -&gt; &#123;</span><br><span class="line">                    commander.println(command);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (channel.isClosed()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (outputStreamForTheChannel.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">10</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ee) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭通道和会话</span></span><br><span class="line">        channel.disconnect();</span><br><span class="line">        session.disconnect();</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-调用上文方法"><a href="#3-调用上文方法" class="headerlink" title="3.调用上文方法"></a>3.调用上文方法</h3><h4 id="3-1-单条命令"><a href="#3-1-单条命令" class="headerlink" title="3.1 单条命令"></a>3.1 单条命令</h4><p>记得结束时加入退出语句，这里以路由器为例，用quit退出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; commandList = <span class="keyword">new</span>  <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">// 查看</span></span><br><span class="line">commandList.add(<span class="string">&quot;display bfd session all&quot;</span>);</span><br><span class="line"><span class="comment">// 退出会话</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 获取响应</span></span><br><span class="line"><span class="type">String</span> <span class="variable">response</span> <span class="operator">=</span> getShellCmdRes(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;1.1.1.1&quot;</span>, <span class="number">22</span>, List&lt;String&gt; commandList)</span><br></pre></td></tr></table></figure><p><img src="https://minio.zhangyl.top/img/2024/java_ssh_single.jpg" alt="本地图片"></p><h4 id="3-2-多条命令"><a href="#3-2-多条命令" class="headerlink" title="3.2 多条命令"></a>3.2 多条命令</h4><p>如果是多条命令，每进入一个会话，就多一个退出语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; commandList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">// 进入system-view</span></span><br><span class="line">commandList.add(<span class="string">&quot;system-view&quot;</span>);</span><br><span class="line"><span class="comment">// 进入Tunnel 0/0/5</span></span><br><span class="line">commandList.add(<span class="string">&quot;interface Tunnel 0/0/5&quot;</span>);</span><br><span class="line"><span class="comment">// 查看信息</span></span><br><span class="line">commandList.add(<span class="string">&quot;display this&quot;</span>);</span><br><span class="line"><span class="comment">// 退出Tunnel 0/0/5</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 退出system-view</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 退出会话</span></span><br><span class="line">commandList.add(<span class="string">&quot;quit&quot;</span>);</span><br><span class="line"><span class="comment">// 获取响应</span></span><br><span class="line"><span class="type">String</span> <span class="variable">response</span> <span class="operator">=</span> getShellCmdRes(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;1.1.1.1&quot;</span>, <span class="number">22</span>, List&lt;String&gt; commandList)</span><br></pre></td></tr></table></figure><p><img src="https://minio.zhangyl.top/img/2024/java_ssh_mutile.jpg" alt="本地图片"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将nginx设置为开机自启动的配置</title>
      <link href="/nginx-%E5%B0%86nginx%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/nginx-%E5%B0%86nginx%E8%AE%BE%E7%BD%AE%E4%B8%BA%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="一、背景描述"><a href="#一、背景描述" class="headerlink" title="一、背景描述"></a>一、背景描述</h3><p>虚拟机上安装了nginx，希望能够开机自启动。</p><h3 id="二、操作步骤"><a href="#二、操作步骤" class="headerlink" title="二、操作步骤"></a>二、操作步骤</h3><h4 id="1-进入-lib-systemd-system-目录下"><a href="#1-进入-lib-systemd-system-目录下" class="headerlink" title="1.进入 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 目录下"></a>1.进入 &#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 目录下</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /lib/systemd/system/</span><br></pre></td></tr></table></figure><h4 id="2-创建文件：nginx-service"><a href="#2-创建文件：nginx-service" class="headerlink" title="2.创建文件：nginx.service"></a>2.创建文件：nginx.service</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch nginx.service</span><br><span class="line">vim nginx.service</span><br></pre></td></tr></table></figure><h4 id="3-编辑文件内容"><a href="#3-编辑文件内容" class="headerlink" title="3.编辑文件内容"></a>3.编辑文件内容</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx service</span><br><span class="line">After=network.target </span><br><span class="line">   </span><br><span class="line">[Service] </span><br><span class="line">Type=forking </span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=true </span><br><span class="line">   </span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="4-开机自启动"><a href="#4-开机自启动" class="headerlink" title="4.开机自启动"></a>4.开机自启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Nginx的failed 13 Permission denied while connecting to upstream</title>
      <link href="/nginx-%E8%A7%A3%E5%86%B3Nginx%E7%9A%8413-Permission-denied%E9%97%AE%E9%A2%98/"/>
      <url>/nginx-%E8%A7%A3%E5%86%B3Nginx%E7%9A%8413-Permission-denied%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h3><p>最近在用nginx做反向代理的时候遇到这样一个问题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024/02/19 17:15:32 [crit] 3025#3025: *2 connect() to 127.0.0.1:19010 failed (13: Permission denied) while connecting to upstream, client: 10.64.68.30, server: , request: &quot;POST /opticTransceiver/addDeviceList HTTP/1.1&quot;, upstream: &quot;http://127.0.0.1:19010/opticTransceiver/addDeviceList&quot;, host: &quot;localhost:8080&quot;, referrer: &quot;http://localhost:8080/device-connect&quot;</span><br></pre></td></tr></table></figure><h3 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h3><p>是因为SeLinux的限制。</p><h3 id="三、解决"><a href="#三、解决" class="headerlink" title="三、解决"></a>三、解决</h3><h4 id="1-关闭SeLinux的限制"><a href="#1-关闭SeLinux的限制" class="headerlink" title="1.关闭SeLinux的限制"></a>1.关闭SeLinux的限制</h4><h5 id="1-临时关闭-不用重启机器"><a href="#1-临时关闭-不用重启机器" class="headerlink" title="1) 临时关闭(不用重启机器)"></a>1) 临时关闭(不用重启机器)</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0 ##设置SELinux 成为permissive模式</span><br></pre></td></tr></table></figure><h5 id="2-修改配置文件-需要重启机器"><a href="#2-修改配置文件-需要重启机器" class="headerlink" title="2) 修改配置文件(需要重启机器)"></a>2) 修改配置文件(需要重启机器)</h5><p>修改&#x2F;etc&#x2F;selinux&#x2F;config 文件<br>将SELINUX&#x3D;enforcing改为SELINUX&#x3D;disabled<br>重启机器即可</p><h4 id="2-执行下面的命令"><a href="#2-执行下面的命令" class="headerlink" title="2.执行下面的命令"></a>2.执行下面的命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot加入websocket</title>
      <link href="/spring-springboot%E5%8A%A0%E5%85%A5websocket/"/>
      <url>/spring-springboot%E5%8A%A0%E5%85%A5websocket/</url>
      
        <content type="html"><![CDATA[<h3 id="一、引入spring-websocket依赖"><a href="#一、引入spring-websocket依赖" class="headerlink" title="一、引入spring-websocket依赖"></a>一、引入<code>spring-websocket</code>依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、开启websocket支持"><a href="#二、开启websocket支持" class="headerlink" title="二、开启websocket支持"></a>二、开启websocket支持</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启websocket的支持</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServerEndpointExporter <span class="title function_">serverEndpointExporter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ServerEndpointExporter</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、websocket工具类"><a href="#三、websocket工具类" class="headerlink" title="三、websocket工具类"></a>三、websocket工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * websocket工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">WebsocketUtil</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 服务端存放客户端对应的session对象</span></span><br><span class="line"><span class="comment">     * key:clientId value:session</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String, Session&gt; WEBSOCKET_CLIENT_SESSION_MAP = Maps.newConcurrentMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 服务端发送消息给所有客户端</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sendMessageToAllClient</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (WEBSOCKET_CLIENT_SESSION_MAP.isEmpty()) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;当前无连接的客户端, 消息忽略推送.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        WEBSOCKET_CLIENT_SESSION_MAP.forEach((sessionId, session) -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                session.getBasicRemote().sendText(message);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;服务端向客户端[&#123;&#125;]发送消息异常.&quot;</span>, sessionId, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、websocket服务端"><a href="#四、websocket服务端" class="headerlink" title="四、websocket服务端"></a>四、websocket服务端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * websocket服务端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ServerEndpoint(&quot;/websocket&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebsocketServer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String sessionId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * websocket建立连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnOpen</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">(Session session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.sessionId = session.getId();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.containsKey(<span class="built_in">this</span>.sessionId)) &#123;</span><br><span class="line">            WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.remove(<span class="built_in">this</span>.sessionId).close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.put(<span class="built_in">this</span>.sessionId, session);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;客户端[&#123;&#125;]建立websocket连接.&quot;</span>, <span class="built_in">this</span>.sessionId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭socket连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnClose</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClose</span><span class="params">(Session session)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.containsKey(session.getId())) &#123;</span><br><span class="line">            WebsocketUtil.WEBSOCKET_CLIENT_SESSION_MAP.remove(session.getId());</span><br><span class="line">            log.info(<span class="string">&quot;客户端[&#123;&#125;]断开websocket连接.&quot;</span>, session.getId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收到消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnMessage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">OnMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;接收到客户端&#123;&#125;发送的消息:[&#123;&#125;].&quot;</span>, <span class="built_in">this</span>.sessionId, message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 连接错误</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> error</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@OnError</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">OnError</span><span class="params">(Session session, Throwable error)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;websocket连接错误,&quot;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h3><blockquote><p>推荐使用Chrome插件–Simple Web Socket Client</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> websocket </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="代理相关"><a href="#代理相关" class="headerlink" title="代理相关"></a>代理相关</h2><h3 id="设置http代理"><a href="#设置http代理" class="headerlink" title="设置http代理"></a>设置http代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy 127.0.0.1:7890</span><br><span class="line">git config --global https.proxy 127.0.0.1:7890</span><br></pre></td></tr></table></figure><h3 id="查看http代理"><a href="#查看http代理" class="headerlink" title="查看http代理"></a>查看http代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --get http.proxy</span><br><span class="line">git config --global --get https.proxy</span><br></pre></td></tr></table></figure><h3 id="取消设置http代理"><a href="#取消设置http代理" class="headerlink" title="取消设置http代理"></a>取消设置http代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置代理</span></span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:10808</span><br><span class="line"><span class="comment"># 取消代理</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
